<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="confing/mappers.sys_user">
    <resultMap id="BaseResultMap" type="com.hz.demo.model.sys_user">
        <id column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="unit_code" jdbcType="VARCHAR" property="unitCode"/>
        <result column="display_name" jdbcType="VARCHAR" property="displayName"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="mobilephone" jdbcType="VARCHAR" property="mobilephone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="add_user_id" jdbcType="VARCHAR" property="addUserId"/>
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="user_themes" jdbcType="VARCHAR" property="userThemes"/>
        <result column="headportrait_img" jdbcType="VARCHAR" property="headportraitImg"/>
        <result column="backup1" jdbcType="VARCHAR" property="backup1"/>
        <result column="backup2" jdbcType="VARCHAR" property="backup2"/>
        <result column="backup3" jdbcType="VARCHAR" property="backup3"/>
        <result column="USERTYPE" jdbcType="INTEGER" property="userType"/>
    </resultMap>
    <sql id="Base_Column_List">
        user_id, unit_code, display_name, login_name, password, sex, mobilephone, email, id_card_no,
        address, add_user_id, add_time, state, user_themes, headportrait_img, backup1, backup2,
        backup3 ,USERTYPE
    </sql>

    <!--根据id记录返回实体-->
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <!--根据id删除记录-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from sys_user
        where user_id = #{userId,jdbcType=VARCHAR}
    </delete>

    <!--添加记录-->
    <insert id="insertSelective" parameterType="com.hz.demo.model.sys_user">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 08 09:26:48 CST 2018.
        -->
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="unitCode != null">
                unit_code,
            </if>
            <if test="displayName != null">
                display_name,
            </if>
            <if test="loginName != null">
                login_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="mobilephone != null">
                mobilephone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="idCardNo != null">
                id_card_no,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="addUserId != null">
                add_user_id,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="userThemes != null">
                user_themes,
            </if>
            <if test="headportraitImg != null">
                headportrait_img,
            </if>
            <if test="backup1 != null">
                backup1,
            </if>
            <if test="backup2 != null">
                backup2,
            </if>
            <if test="backup3 != null">
                backup3,
            </if>
            <if test="userType != null">
                USERTYPE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="unitCode != null">
                #{unitCode,jdbcType=VARCHAR},
            </if>
            <if test="displayName != null">
                #{displayName,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="mobilephone != null">
                #{mobilephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="idCardNo != null">
                #{idCardNo,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="addUserId != null">
                #{addUserId,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state},
            </if>
            <if test="userThemes != null">
                #{userThemes,jdbcType=VARCHAR},
            </if>
            <if test="headportraitImg != null">
                #{headportraitImg,jdbcType=VARCHAR},
            </if>
            <if test="backup1 != null">
                #{backup1,jdbcType=VARCHAR},
            </if>
            <if test="backup2 != null">
                #{backup2,jdbcType=VARCHAR},
            </if>
            <if test="backup3 != null">
                #{backup3,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType},
            </if>
        </trim>
    </insert>

    <!--根据id更新记录-->
    <update id="updateByPrimaryKeySelective" parameterType="pd">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 08 09:26:48 CST 2018.
        -->
        update sys_user
        <set>
            <if test="unitCode != null">
                unit_code = #{unitCode,jdbcType=VARCHAR},
            </if>
            <if test="displayName != null">
                display_name = #{displayName,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="mobilephone != null">
                mobilephone = #{mobilephone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="idCardNo != null">
                id_card_no = #{idCardNo,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="addUserId != null">
                add_user_id = #{addUserId,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                STATE = #{state},
            </if>
            <if test="userThemes != null">
                user_themes = #{userThemes,jdbcType=VARCHAR},
            </if>
            <if test="headportraitImg != null">
                headportrait_img = #{headportraitImg,jdbcType=VARCHAR},
            </if>
            <if test="backup1 != null">
                backup1 = #{backup1,jdbcType=VARCHAR},
            </if>
            <if test="backup2 != null">
                backup2 = #{backup2,jdbcType=VARCHAR},
            </if>
            <if test="backup3 != null">
                backup3 = #{backup3,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>

    <!--根据unitcode 修改用户 假删除-->
    <update id="updateByUnitCode" parameterType="pd">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 08 09:26:48 CST 2018.
        -->
        update sys_user
        set  STATE = #{state}
        where unit_code = #{unitCode,jdbcType=VARCHAR}
    </update>

    <!--根据条件查询记录-->
    <select id="getUserWhere" parameterType="pd" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where 1=1
        <if test="loginName != null and loginName !=''">
            and login_name = #{loginName}
        </if>
        <if test="userId != null and userId !=''">
            and user_id = #{userId}
        </if>
        <if test="unitCode != null and unitCode !=''">
            and unit_code = #{unitCode}
        </if>
        <if test="achiresult != null and achiresult !=''">
            and usertype = #{achiresult}
        </if>
        and state=1
    </select>

    <!--根据条件/分页查询用户全部记录-->
    <select id="selectList" parameterType="pd" resultMap="BaseResultMap">

        select <include refid="Base_Column_List"/>
        from
        (select rownum rn,e.* from
        (
        select a.* from sys_user a  where 1 = 1
        <if test="unitCode != null and unitCode !=''">
            and  a.UNIT_CODE = #{unitCode}
        </if>
        <if test="displayName != null and displayName !=''">
            and display_name like '%'||#{displayName}||'%'
        </if>
        ORDER by a.add_time DESC ) e
        <if test="page != null and rows != null">
            where rownum &lt;=#{rows}*#{page}) b
            where  rn>(#{page}-1)*#{rows}
        </if>
    </select>

    <!--根据条件查询全部记录个数-->
    <select id="selectCount" parameterType="pd" resultType="Integer">
        select count(*) as listcount from sys_user a  where 1 = 1
        <if test="unitCode != null and unitCode !='' ">
            and  a.UNIT_CODE = #{unitCode}
        </if>
        <if test="displayName != null and displayName !=''">
            and display_name like '%'||#{displayName}||'%'
        </if>
    </select>

    <!--根据条件查询部门管理员信息-->
    <select id="getUserListWhere" parameterType="pd" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where 1=1
        <if test="unitCode != null and unitCode !=''">
            and unit_code = #{unitCode}
            and login_name = #{unitCode}
        </if>
    </select>

    <!--根据条件查询部门所有人员信息-->
    <!--<select id="getUserList" parameterType="pd" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where 1=1
        <if test="unitCode != null and unitCode !=''">
            and unit_code = #{unitCode}
        </if>
    </select>-->
    <!-- 查询今年系列申报人数-->
    <select id="selectTBXL"  parameterType="pd" resultType="pd">
        select count(*) cou,sd.dict_name from  TB_PROPOSER_MSG tpm
        LEFT JOIN SYS_DICT sd on sd.dict_code=tpm.REVIEW_SERIES and sd.group_name='REVIEW_SERIES'
        left join BASE_PROPOSER bp on bp.id=tpm.USER_ID
        where  extract(year from tpm.REPORT_DATE)=extract(year from sysdate)
        <if test="JUDGING_CODE==null or JUDGING_CODE==''">
            and bp.DECLARE_UNITCODE in (
            select unit_code from base_unit m start with m.UNIT_CODE=#{UNIT_CODE}
            connect by prior m.UNIT_CODE=m.PARENTUNIT_CODE
            )
        </if>
        <if test="JUDGING_CODE!=null and JUDGING_CODE!=''">
            and tpm.BASE_JUDGING_SERIES=#{JUDGING_CODE}
        </if>
        group by sd.dict_name
    </select>

    <!-- 查询今年申请职称级别人数-->
    <select id="selectTBJB"  parameterType="pd" resultType="pd">
        select count(*) cou,sd1.dict_name from TB_PROPOSER_MSG tpm
        LEFT JOIN SYS_DICT sd on sd.dict_code=tpm.PROPOSE_POSITION and sd.group_name='POSITIONAL_TITLES'
        LEFT JOIN SYS_DICT sd1 on sd1.dict_code=sd.BACKUP2 and sd1.group_name='TITLE_LEVEL'
        left join BASE_PROPOSER bp on bp.id=tpm.USER_ID
        where  extract(year from tpm.REPORT_DATE)=extract(year from sysdate)
        <if test="JUDGING_CODE==null or JUDGING_CODE==''">
            and bp.DECLARE_UNITCODE in (
            select unit_code from base_unit m start with m.UNIT_CODE=#{UNIT_CODE}
            connect by prior m.UNIT_CODE=m.PARENTUNIT_CODE
            )
        </if>
        <if test="JUDGING_CODE!='' and JUDGING_CODE!=null">
            and tpm.BASE_JUDGING_SERIES=#{JUDGING_CODE}
        </if>
        group by sd1.dict_name
    </select>

    <!--获取用户角色信息-->
    <select id="selectRole" resultType="pd" parameterType="pd">
        select sr.FSORT  from SYS_USER su
        LEFT JOIN SYS_USERROLE sur on sur.USER_ID=su.USER_ID
        LEFT JOIN SYS_ROLE sr on sr.role_id=sur.role_id
        where su.user_id=#{USER_ID} and sr.fsort not like '71%'
    </select>
    <!--获取待审察人数-->
    <select id="selectProposerMsg" resultType="pd" parameterType="pd">
        SELECT count(*) cou,tpm.JUDGING_STAGE FROM TB_PROPOSER_MSG tpm
        LEFT JOIN BASE_PROPOSER bp on bp.id=tpm.user_id
        WHERE tpm.JUDGING_STAGE in (${JUDGING_STAGE})
        group by tpm.JUDGING_STAGE
    </select>
    <!--获取评后-->
    <select id="selectafter" resultType="pd" parameterType="java.lang.String">

		SELECT
			count(*) cou
		FROM
			REC_REVIEWRESULT t1
		WHERE
			t1.user_id IN ( SELECT user_id FROM TB_PROPOSER_MSG WHERE CURRENT_STATE = 19 )
			AND t1.JUDGING_CODE IN ( SELECT JUDGING_CODE FROM base_judging WHERE BACK3 = 1 AND MANAGE_UNIT = #{UNIT_CODE})
    </select>
    <!--查询当前用户是否具备菜单权限-->
    <select id="selectHave" resultType="pd" parameterType="java.lang.String">
        select smm.* from sys_menu smm
		inner join SYS_MENUFUN sm on smm.MENU_ID=sm.MENU_ID
        inner JOIN  SYS_ROLEMENUFUN srm on sm.MENU_FUN_ID=srm.MENU_FUN_ID
        inner JOIN SYS_ROLE sr on sr.role_id=srm.ROLE_ID
        where sr.fsort=#{fsort} and smm.MENU_CODE='0209'

    </select>
    <!--查询当前用户专家审查推荐-->
    <select id="selectSplit" resultType="pd" >
       		SELECT
					count(*) cou
				FROM
					base_proposer
				WHERE
				backup2 = '1'
					AND id = ( SELECT USER_ID FROM TB_SPECIALITY_MSG WHERE USER_ID = base_proposer.id AND JUDGING_STAGE =13 )
    </select>

    <!--查询当前专家 专业组投票-->
    <select id="selectSplitTickets" resultType="pd" parameterType="java.lang.String">
       	select count(*) cou from TB_PROPOSER_MSG tpm
        LEFT JOIN BASE_PROPOSER_GROUP bpg  on bpg.PROPOSER_ID=tpm.user_id
        left join BASE_SPECIALITY_GROUP bsgp on bsgp.GROUP_ID=bpg.GROUP_ID
        where extract(year from tpm.REPORT_DATE)=extract(year from sysdate)
        and bjp.PROCESS_TYPE=4
        and bsgp.SPECIALITY_ID=#{SPECIALITY_ID}
        and tpm.user_id not in (
            select PROPOSER_ID from BASE_SPECIALITY_TICKETS where type=1
        )
    </select>
    <!--查询当前专家 评委会投票-->
    <select id="selectSplitTicketsTwo" resultType="pd" parameterType="java.lang.String">
        select count(*) cou from TB_PROPOSER_MSG tpm
        LEFT JOIN BASE_ENGAGE ben on ben.JUDGING_CODE=tpm.BASE_JUDGING_SERIES
        left join BASE_JUDGING_PROCESS bjp on bjp.JUDGING_CODE=ben.JUDGING_CODE
        where  extract(year from tpm.REPORT_DATE)=extract(year from sysdate)
        and bjp.PROCESS_TYPE=6
        and ben.SPECIALITY_ID=#{SPECIALITY_ID}

        and tpm.USER_ID not in (
            select PROPOSER_ID from BASE_SPECIALITY_TICKETS where type=2
        )
    </select>
</mapper>