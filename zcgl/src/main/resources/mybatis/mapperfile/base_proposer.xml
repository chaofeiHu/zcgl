<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="confing/mappers.base_proposer">
  <resultMap id="BaseResultMap" type="com.hz.demo.model.base_proposer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="DECLARE_UNITCODE" jdbcType="VARCHAR" property="declareUnitcode" />
    <result column="BASIC_UNITCODE" jdbcType="VARCHAR" property="basicUnitcode" />
    <result column="DISPLAY_NAME" jdbcType="VARCHAR" property="displayName" />
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName" />
    <result column="LOGIN_PASSWORD" jdbcType="VARCHAR" property="loginPassword" />
    <result column="MOBILEPHONE" jdbcType="VARCHAR" property="mobilephone" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="ID_CARD_NO" jdbcType="VARCHAR" property="idCardNo" />
    <result column="ADD_USER_ID" jdbcType="VARCHAR" property="addUserId" />
    <result column="ADD_TIME" jdbcType="TIMESTAMP" property="addTime" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
    <result column="BACKUP1" jdbcType="VARCHAR" property="backup1" />
    <result column="BACKUP2" jdbcType="VARCHAR" property="backup2" />
    <result column="BACKUP3" jdbcType="VARCHAR" property="backup3" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    ID, DECLARE_UNITCODE, BASIC_UNITCODE, DISPLAY_NAME, LOGIN_NAME, LOGIN_PASSWORD, MOBILEPHONE,
    EMAIL, ID_CARD_NO, ADD_USER_ID, ADD_TIME, STATE, BACKUP1, BACKUP2, BACKUP3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    select
    <include refid="Base_Column_List" />
    from BASE_PROPOSER
    where ID = #{id,jdbcType=DECIMAL}
  </select>

 <!-- 根据手机号或身份证号查询用户 验证是否存在-->
  <select id="getProposerWhere" parameterType="pd" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    SELECT * FROM
    (
    select
      <include refid="Base_Column_List" />
      from BASE_PROPOSER
      where 1 = 1
    <if test="id != null and id != ''">
      AND ID != #{id}
    </if>
    )
    WHERE 1 = 0
    <if test="mobilephone != null and mobilephone !=''">
      OR MOBILEPHONE = #{mobilephone,jdbcType=VARCHAR}
    </if>
    <if test="idCardNo != null and idCardNo != ''">
      OR ID_CARD_NO = #{idCardNo,jdbcType=VARCHAR}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    delete from BASE_PROPOSER
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.hz.demo.model.base_proposer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    insert into BASE_PROPOSER (ID, DECLARE_UNITCODE, BASIC_UNITCODE,
      DISPLAY_NAME, LOGIN_NAME, LOGIN_PASSWORD,
      MOBILEPHONE, EMAIL, ID_CARD_NO,
      ADD_USER_ID, ADD_TIME, STATE,
      BACKUP1, BACKUP2, BACKUP3
      )
    values (#{SEQ_BASE_PROPOSER.NEXTVAL,jdbcType=DECIMAL}, #{declareUnitcode,jdbcType=VARCHAR}, #{basicUnitcode,jdbcType=VARCHAR},
      #{displayName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR},
      #{mobilephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{idCardNo,jdbcType=VARCHAR},
      #{addUserId,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{state,jdbcType=DECIMAL},
      #{backup1,jdbcType=VARCHAR}, #{backup2,jdbcType=VARCHAR}, #{backup3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hz.demo.model.base_proposer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    insert into BASE_PROPOSER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="declareUnitcode != null">
        DECLARE_UNITCODE,
      </if>
      <if test="basicUnitcode != null">
        BASIC_UNITCODE,
      </if>
      <if test="displayName != null">
        DISPLAY_NAME,
      </if>
      <if test="loginName != null">
        LOGIN_NAME,
      </if>
      <if test="loginPassword != null">
        LOGIN_PASSWORD,
      </if>
      <if test="mobilephone != null">
        MOBILEPHONE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="idCardNo != null">
        ID_CARD_NO,
      </if>
      <if test="addUserId != null">
        ADD_USER_ID,
      </if>
      <if test="addTime != null">
        ADD_TIME,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="backup1 != null">
        BACKUP1,
      </if>
      <if test="backup2 != null">
        BACKUP2,
      </if>
      <if test="backup3 != null">
        BACKUP3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="declareUnitcode != null">
        #{declareUnitcode,jdbcType=VARCHAR},
      </if>
      <if test="basicUnitcode != null">
        #{basicUnitcode,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="mobilephone != null">
        #{mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null">
        #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="addUserId != null">
        #{addUserId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=DECIMAL},
      </if>
      <if test="backup1 != null">
        #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null">
        #{backup2,jdbcType=VARCHAR},
      </if>
      <if test="backup3 != null">
        #{backup3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.demo.model.base_proposer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    update BASE_PROPOSER
    <set>
      <if test="declareUnitcode != null">
        DECLARE_UNITCODE = #{declareUnitcode,jdbcType=VARCHAR},
      </if>
      <if test="basicUnitcode != null">
        BASIC_UNITCODE = #{basicUnitcode,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        DISPLAY_NAME = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="mobilephone != null">
        MOBILEPHONE = #{mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null">
        ID_CARD_NO = #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="addUserId != null">
        ADD_USER_ID = #{addUserId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=DECIMAL},
      </if>
      <if test="backup1 != null">
        BACKUP1 = #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null">
        BACKUP2 = #{backup2,jdbcType=VARCHAR},
      </if>
      <if test="backup3 != null">
        BACKUP3 = #{backup3,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.demo.model.base_proposer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 11 10:30:02 CST 2018.
    -->
    update BASE_PROPOSER
    set DECLARE_UNITCODE = #{declareUnitcode,jdbcType=VARCHAR},
      BASIC_UNITCODE = #{basicUnitcode,jdbcType=VARCHAR},
      DISPLAY_NAME = #{displayName,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR},
      MOBILEPHONE = #{mobilephone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      ID_CARD_NO = #{idCardNo,jdbcType=VARCHAR},
      ADD_USER_ID = #{addUserId,jdbcType=VARCHAR},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      STATE = #{state,jdbcType=DECIMAL},
      BACKUP1 = #{backup1,jdbcType=VARCHAR},
      BACKUP2 = #{backup2,jdbcType=VARCHAR},
      BACKUP3 = #{backup3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>

  <!--根据条件查询全部记录-->
  <select id="selectList" parameterType="pd" resultMap="BaseResultMap">
    select *
    from
    (select rownum rn,e.* from
        (select g.id,g.display_name,g.login_name,g.mobilephone,g.email,g.id_card_no, g.declare_unitcode,g.add_time,g.state,d.unit_name as basic_unitcode
            from
            (select a.id,a.basic_unitcode,a.display_name,a.login_name,a.mobilephone,a.email,a.id_card_no,a.add_time,a.state, b.unit_name as declare_unitcode
              from (select * from base_proposer where DECLARE_UNITCODE = #{declareUnitcode}
              <if test="displayName != null and displayName != ''">
                  AND DISPLAY_NAME LIKE '%'||#{displayName}||'%'
              </if>
    <if test="backup2 != null and backup2 != ''">
      AND backup2 = #{backup2}
    </if>
              ) a
            left join base_unit b on a.declare_unitcode = b.unit_code)g
            left join base_unit d on g.basic_unitcode = d.unit_code
            order by add_time desc
        ) e
      <if test="page != null and rows != null">
          where rownum &lt;=#{rows}*#{page})f
          where  rn>(#{page}-1)*#{rows}
      </if>
  </select>

  <!--根据条件查询全部记录个数-->
  <select id="selectCount" parameterType="pd" resultType="Integer">

    select count(*) as listcount
      FROM (SELECT *
      from (select * from base_proposer where DECLARE_UNITCODE = #{declareUnitcode}
      <if test="displayName != null and displayName != ''">
        AND DISPLAY_NAME LIKE '%'||#{displayName}||'%'
      </if>
    <if test="backup2 != null and backup2 != ''">
      AND backup2 = #{backup2}
    </if>
      ) a
      left join base_unit b on a.declare_unitcode = b.unit_code)d

  </select>

  <!--根据申报阶段分页查询全部记录-->
  <select id="getJudgingProposerList" parameterType="pd" resultType="java.util.Map">
    SELECT
    *
    FROM
    (
    SELECT ROWNUM
    rn,
    e.*
    FROM
    (
    SELECT
    g.id,
    g.display_name,
    g.unit_name,
    g.XILIE,
    g.ZIGE,
    g.professial_name,
    g.LEIXING,
    g.judging_name,
    g.judging_code,
    g.state,
    g.CURRENT_STATE,
    d.unit_name AS basic_unitcode,
    g.RESULT,
    g.backup2,
    g.REPORT_DATE
    FROM
    (
    SELECT
    *
    FROM
    (
    SELECT
    *
    FROM
    base_proposer
    WHERE
    DECLARE_UNITCODE  like #{declareUnitcode}||'%'
    <if test="displayName != null and displayName != ''">
      AND DISPLAY_NAME LIKE '%'||#{displayName}||'%'
    </if>
    <if test="backup2 != null and backup2 != ''">
      AND backup2 = '0'
    </if>
    AND id = ( SELECT USER_ID FROM TB_PROPOSER_MSG WHERE USER_ID = base_proposer.id
    <if test="judgingStage!=null ">AND JUDGING_STAGE = #{judgingStage}</if>
    )
    ) a
    LEFT JOIN (SELECT unit_code,UNIT_NAME FROM base_unit) b ON a.declare_unitcode = b.unit_code
    LEFT JOIN
    (
    SELECT pm1.user_id,pm1.CURRENT_STATE CURRENT_STATE2,REPORT_DATE,sd1.dict_code,sd1.dict_name "XILIE",sd2.dict_code dict_code2,sd2.dict_name "ZIGE",sd3.dict_name "LEIXING",
    bj1.judging_name ,bj1.judging_code,bp1.professial_name,tjr1.jud_Result "RESULT",sd4.DICT_NAME "CURRENT_STATE"  from
    (SELECT USER_ID, REVIEW_SERIES, propose_position, SHENBAOMAJOR_ID, pingshentype, BASE_JUDGING_SERIES,CURRENT_STATE,REPORT_DATE FROM TB_PROPOSER_MSG) pm1
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_SERIES')sd1 on sd1.dict_code=pm1.REVIEW_SERIES
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='POSITIONAL_TITLES')sd2 on sd2.dict_code=pm1.propose_position
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_TYPE')sd3 on sd3.dict_code=pm1.pingshentype
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='CURRENT_STATE')sd4 on sd4.dict_code=pm1.CURRENT_STATE
    LEFT JOIN(SELECT judging_code,judging_name FROM BASE_JUDGING )bj1 on bj1.judging_code=pm1.BASE_JUDGING_SERIES
    LEFT JOIN(SELECT professial_code,professial_name FROM BASE_SERIES_PROFESSIAL)bp1 on bp1.professial_code=pm1.SHENBAOMAJOR_ID
    left join(select pro_id,jud_Result from TB_JUD_RESULT where JUD_CONTENT='99'
    <if test="judgingStage!=null and judgingStage!=13">AND jud_Stage = #{judgingStage}</if>
    <if test="judgingStage==13"> and jud_Stage = '15'</if>
    )tjr1  on tjr1.pro_id=pm1.user_id
    ) pm ON a.id = pm.user_id
    where 1=1
    <if test="gljg != null and gljg != ''">
      and  b.UNIT_NAME like '%' || #{gljg} || '%'
    </if>
    <if test="pwh != null and pwh != ''">
      and   pm.judging_code=#{pwh}
    </if>
    <if test="xilie != null and xilie != ''">
      and  pm.dict_code=#{xilie}
    </if>
    <if test="sbzg != null and sbzg != ''">
      and   pm.dict_code2=#{sbzg}
    </if>
    <if test="nian != null and nian != ''">
      and to_char(pm.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      and to_char(pm.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    <if test="dqzt != null and dqzt != '' and dqzt != -1">
      <if test="dqzt == 0">
          and  pm.RESULT &lt;&gt; 3
      </if>
        <if test="dqzt== 3">
            and  pm.RESULT=#{dqzt} or pm.RESULT is null
        </if>
    </if>
    <if test="sczt != null and sczt != ''">
      and  pm.CURRENT_STATE2=#{sczt}
    </if>
    ) g
    LEFT JOIN base_unit d ON g.basic_unitcode = d.unit_code
      order by add_time desc
      ) e
    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page})f
      where  rn>(#{page}-1)*#{rows}
    </if>
  </select>

  <!--根据申报阶段查询全部记录个数-->
  <select id="getJudgingProposerListCount" parameterType="pd" resultType="Integer">

    SELECT
    count(*)
    FROM
    (
    SELECT
    g.id,
    g.display_name,
    g.unit_name,
    g.XILIE,
    g.ZIGE,
    g.professial_name,
    g.LEIXING,
    g.judging_name,
    g.judging_code,
    g.state,
    g.CURRENT_STATE,
    d.unit_name AS basic_unitcode,
    g.RESULT,
    g.backup2,
    g.REPORT_DATE
    FROM
    (
    SELECT
    *
    FROM
    (
    SELECT
    *
    FROM
    base_proposer
    WHERE
    DECLARE_UNITCODE  like #{declareUnitcode}||'%'
    <if test="displayName != null and displayName != ''">
      AND DISPLAY_NAME LIKE '%'||#{displayName}||'%'
    </if>
      AND backup2 = '0'
      AND id = ( SELECT USER_ID FROM TB_PROPOSER_MSG WHERE USER_ID = base_proposer.id
    <if test="judgingStage!=null">AND JUDGING_STAGE = #{judgingStage}</if>
    )
    ) a
    LEFT JOIN (SELECT unit_code,UNIT_NAME FROM base_unit) b ON a.declare_unitcode = b.unit_code
    LEFT JOIN
    (
    SELECT pm1.user_id,pm1.CURRENT_STATE CURRENT_STATE2,REPORT_DATE,sd1.dict_code,sd1.dict_name "XILIE",sd2.dict_code dict_code2,sd2.dict_name "ZIGE",sd3.dict_name "LEIXING",
    bj1.judging_name ,bj1.judging_code,bp1.professial_name,tjr1.jud_Result "RESULT",sd4.DICT_NAME "CURRENT_STATE"  from
    (SELECT USER_ID, REVIEW_SERIES, propose_position, SHENBAOMAJOR_ID, pingshentype, BASE_JUDGING_SERIES,CURRENT_STATE,REPORT_DATE FROM TB_PROPOSER_MSG) pm1
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_SERIES')sd1 on sd1.dict_code=pm1.REVIEW_SERIES
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='POSITIONAL_TITLES')sd2 on sd2.dict_code=pm1.propose_position
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_TYPE')sd3 on sd3.dict_code=pm1.pingshentype
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='CURRENT_STATE')sd4 on sd4.dict_code=pm1.CURRENT_STATE
    LEFT JOIN(SELECT judging_code,judging_name FROM BASE_JUDGING )bj1 on bj1.judging_code=pm1.BASE_JUDGING_SERIES
    LEFT JOIN(SELECT professial_code,professial_name FROM BASE_SERIES_PROFESSIAL)bp1 on bp1.professial_code=pm1.SHENBAOMAJOR_ID
    left join(select pro_id,jud_Result from TB_JUD_RESULT where JUD_CONTENT='99'
    <if test="judgingStage!=null and judgingStage!=13">AND jud_Stage = #{judgingStage}</if>
    <if test="judgingStage==13">AND  jud_Stage = '15'</if>
    )tjr1  on tjr1.pro_id=pm1.user_id
    ) pm ON a.id = pm.user_id
    where 1=1
    <if test="gljg != null and gljg != ''">
      and  b.UNIT_NAME like '%' || #{gljg} || '%'
    </if>
    <if test="pwh != null and pwh != ''">
      and   pm.judging_code=#{pwh}
    </if>
    <if test="xilie != null and xilie != ''">
      and  pm.dict_code=#{xilie}
    </if>
    <if test="sbzg != null and sbzg != ''">
      and   pm.dict_code2=#{sbzg}
    </if>
    <if test="nian != null and nian != ''">
      and to_char(pm.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      and to_char(pm.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    <if test="dqzt != null and dqzt != ''">
        <if test="dqzt ==0">
            and  pm.RESULT &lt;&gt; 3
        </if>
        <if test="dqzt== 3">
            and  pm.RESULT=#{dqzt}
        </if>
    </if>
      <if test="sczt != null and sczt != ''">
          and  pm.CURRENT_STATE2=#{sczt}
      </if>
    ) g
    LEFT JOIN base_unit d ON g.basic_unitcode = d.unit_code
    ) e
  </select>

  <!--根据条件查询 申报人员状态信息-->
  <select id="selectProposerTypeList" parameterType="pd" resultType="pd">
    select *
    from
    (select rownum rw,a. ID,
    a.DISPLAY_NAME,
    a.ID_CARD_NO,
    a.UNIT_NAME,
    a.PROFESSIAL_NAME,
    a.DICT_NAME,
    a.DICT_NAME AS DICT_NAME1,
    a.CURRENT_STATE,
    a.JUDGING_NAME,
    a.JUDGING_CODE,
    a.JUDGING_STAGE,
    a.PARENTUNIT_CODE,
    a.JUD_RESULT,
    a.JUD_VIEW,
     a.JUD_CONTENT,a.UNIT_CODE,a.ADD_TIME
      from
    (select BASEPR.ID,basepr.DISPLAY_NAME,basepr.ID_CARD_NO,basepr.UNIT_NAME,basepr.ADD_TIME,bp.PROFESSIAL_NAME,d.JUD_RESULT,
    d.JUD_VIEW,
    d.JUD_CONTENT,
    dict1.DICT_NAME, dict2.DICT_NAME as DICT_NAME1,dict3.DICT_NAME as CURRENT_STATE, bj.JUDGING_NAME,bj.JUDGING_CODE,tmsg.JUDGING_STAGE,basepr.PARENTUNIT_CODE,basepr.UNIT_CODE
    from (
    select BB.id,
    bb.DISPLAY_NAME,
    bb.ID_CARD_NO,
    bb.ADD_TIME,
    BASEUNIT.UNIT_NAME,
    baseunit.UNIT_CODE,
    BASEUNIT.PARENTUNIT_CODE from BASE_PROPOSER bb
    LEFT JOIN (select * from base_unit m start with
    <if test="basicUnitcode != null and basicUnitcode != ''">
      m.UNIT_CODE=#{basicUnitcode}
    </if>
    <if test="basicUnitcode == ''">
      m.UNIT_CODE=#{UNIT_CODE}
    </if>
    connect by prior m.UNIT_CODE=m.PARENTUNIT_CODE) baseunit ON bb.declare_unitcode = baseunit.unit_code
    where  bb.STATE=1
    <if test="DISPLAY_NAME != null and DISPLAY_NAME != ''">
      AND bb.DISPLAY_NAME LIKE '%'||#{DISPLAY_NAME}||'%'
    </if>
    <if test="backup2!=null">
      and bb.backup2=#{backup2}
    </if>
      AND baseunit.UNIT_CODE is not null
    ) basepr
    LEFT JOIN TB_PROPOSER_MSG tmsg ON tmsg.USER_ID = basepr.ID
    left join BASE_SERIES_PROFESSIAL bp on bp.PROFESSIAL_CODE=tmsg.SHENBAOMAJOR_ID
    LEFT JOIN SYS_DICT dict1 on dict1.DICT_CODE=tmsg.propose_position and dict1.group_name='POSITIONAL_TITLES'
    LEFT JOIN SYS_DICT dict2 on dict2.DICT_CODE=tmsg.REVIEW_SERIES and dict2.group_name='REVIEW_SERIES'
    LEFT JOIN SYS_DICT dict3 on dict3.DICT_CODE=tmsg.CURRENT_STATE and dict3.group_name='CURRENT_STATE'
    LEFT JOIN BASE_JUDGING bj on bj.JUDGING_CODE=tmsg.BASE_JUDGING_SERIES
    LEFT JOIN (SELECT * FROM
    ( SELECT row_number () over ( partition BY pro_id ORDER BY jud_content DESC ) rn, TB_JUD_RESULT.* FROM TB_JUD_RESULT ) t
    WHERE
    t.rn = 1
    ) D ON basepr.id = d.pro_id
    <if test="nian != null and nian != ''">
      where to_char(tmsg.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      where to_char(tmsg.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
      ORDER BY
    basepr.id desc) a
       where rownum &lt;=#{rows}*#{page})f
      where  rw>(#{page}-1)*#{rows}

  </select>
  <!--根据条件查询 申报人员状态信息-->
  <select id="selectProposerTypeCount" parameterType="pd" resultType="Integer">

    select count(*) as listcount
    from
    (select a. ID,
    a.DISPLAY_NAME,
    a.ID_CARD_NO,
    a.UNIT_NAME,
    a.PROFESSIAL_NAME,
    a.DICT_NAME,
    a.DICT_NAME AS DICT_NAME1,
    a.CURRENT_STATE,
    a.JUDGING_NAME,
    a.JUDGING_CODE,
    a.JUDGING_STAGE,
    a.PARENTUNIT_CODE,
    d.JUD_RESULT,
    d.JUD_VIEW from
    (select BASEPR.ID,basepr.DISPLAY_NAME,basepr.ID_CARD_NO,basepr.UNIT_NAME,bp.PROFESSIAL_NAME,
    dict1.DICT_NAME, dict2.DICT_NAME as DICT_NAME1,dict3.DICT_NAME as CURRENT_STATE, bj.JUDGING_NAME,bj.JUDGING_CODE,tmsg.JUDGING_STAGE,basepr.PARENTUNIT_CODE
    from (
    select BB.id,
    bb.DISPLAY_NAME,
    bb.ID_CARD_NO,
    BASEUNIT.UNIT_NAME,
    BASEUNIT.PARENTUNIT_CODE from BASE_PROPOSER bb
    LEFT JOIN (select * from base_unit m start with
    <if test="basicUnitcode != null and basicUnitcode != ''">
      m.UNIT_CODE=#{basicUnitcode}
    </if>
    <if test="basicUnitcode == null or basicUnitcode == ''">
      m.UNIT_CODE=#{UNIT_CODE}
    </if>
    connect by prior m.UNIT_CODE=m.PARENTUNIT_CODE) baseunit ON bb.declare_unitcode = baseunit.unit_code
    where  bb.STATE=1
    <if test="DISPLAY_NAME != null and DISPLAY_NAME != ''">
      AND bb.DISPLAY_NAME LIKE '%'||#{DISPLAY_NAME}||'%'
    </if>
    <if test="backup2 != null and backup2 != ''">
      AND bb.backup2 = #{backup2}
    </if>
      AND baseunit.UNIT_CODE is not null
    )  basepr
    LEFT JOIN TB_PROPOSER_MSG tmsg ON tmsg.USER_ID = basepr.ID
    left join BASE_SERIES_PROFESSIAL bp on bp.PROFESSIAL_CODE=tmsg.SHENBAOMAJOR_ID
    LEFT JOIN SYS_DICT dict1 on dict1.DICT_CODE=tmsg.propose_position and dict1.group_name='POSITIONAL_TITLES'
    LEFT JOIN SYS_DICT dict2 on dict2.DICT_CODE=tmsg.REVIEW_SERIES and dict2.group_name='REVIEW_SERIES'
    LEFT JOIN SYS_DICT dict3 on dict3.DICT_CODE=tmsg.CURRENT_STATE and dict3.group_name='CURRENT_STATE'
    LEFT JOIN BASE_JUDGING bj on bj.JUDGING_CODE=tmsg.BASE_JUDGING_SERIES
    <if test="nian != null and nian != ''">
      where to_char(tmsg.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      where to_char(tmsg.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    ) a LEFT JOIN (
      select  * from  (
      select row_number() over( partition by pro_id ORDER BY jud_content desc ) rn
      , TB_JUD_RESULT.* from TB_JUD_RESULT )t where t.rn=1)D on a.id=d.pro_id
    )f

  </select>

  <select id="selectUnitCode" resultType="pd" parameterType="pd">
    select a.* from (
       select * from base_unit m start with  m.UNIT_CODE=#{PARENTUNIT_CODE}
         connect by prior m.PARENTUNIT_CODE=m.UNIT_CODE) a
    where 1=1
    <if test="UNIT_ATTACH != null and UNIT_ATTACH != ''">
      AND a.UNIT_ATTACH = #{UNIT_ATTACH}
    </if>
    <if test="state==1">
      AND  a.unit_category=6
    </if>
    <if test="state==3">
      AND  a.unit_category=5
    </if>
    <if test="state==5">
      AND a.unit_category=4
    </if>
    <if test="state==7">
      AND a.unit_category=2
    </if>
  </select>


  <!--根据申报阶段分页查询全部记录 参评人员审查-->
  <select id="getJudgingProposerListCan" parameterType="pd" resultType="java.util.Map">
    SELECT
    *
    FROM
    (
    SELECT ROWNUM
    rn,
    e.*
    FROM
    (
    SELECT
    g.id,
    g.display_name,
    g.unit_name,
    g.XILIE,
    g.ZIGE,
    g.professial_name,
    g.LEIXING,
    g.judging_name,
    g.judging_code,
    g.state,
    g.CURRENT_STATE,
    d.unit_name AS basic_unitcode,
    g.RESULT,
    g.JUDGING_STAGE,
    g.BACKUP2,
           g.REPORT_DATE
    FROM
    (
    SELECT
    *
    FROM
    (
    SELECT
    *
    FROM
    base_proposer
    WHERE
    id = ( SELECT USER_ID FROM TB_PROPOSER_MSG WHERE USER_ID = base_proposer.id
    AND (JUDGING_STAGE &gt;= #{judgingStage}+0 or JUDGING_STAGE='13')
    and user_id not in (select USER_ID FROM TB_PROPOSER_MSG WHERE JUDGING_STAGE='13' and CURRENT_STATE!='15' )
    and BASE_JUDGING_SERIES in (
    <if test="declareUnitcode != null and declareUnitcode != ''">
      select JUDGING_CODE FROM BASE_JUDGING where BUILD_UNIT=#{declareUnitcode} or MANAGE_UNIT=#{declareUnitcode}
    </if>
    <if test="JUDGING_CODE != null and JUDGING_CODE != ''">
      #{JUDGING_CODE}
    </if>
    ))
    <if test="displayName != null and displayName != ''">
      AND DISPLAY_NAME LIKE '%'||#{displayName}||'%'
    </if>
    <if test="backup2 != null and backup2 != ''">
      AND backup2 = '0'
    </if>
    ) a
    LEFT JOIN (SELECT unit_code,UNIT_NAME FROM base_unit) b ON a.declare_unitcode = b.unit_code
    LEFT JOIN
    (
    SELECT pm1.user_id,pm1.CURRENT_STATE CURRENT_STATE2,REPORT_DATE,pm1.JUDGING_STAGE,sd1.dict_code,sd1.dict_name "XILIE",sd2.dict_code dict_code2,sd2.dict_name "ZIGE",sd3.dict_name "LEIXING",
    bj1.judging_name ,bj1.judging_code,bp1.professial_name,tjr1.jud_Result "RESULT",sd4.DICT_NAME "CURRENT_STATE"  from
    (SELECT USER_ID, REVIEW_SERIES, propose_position, SHENBAOMAJOR_ID, pingshentype, BASE_JUDGING_SERIES,CURRENT_STATE,JUDGING_STAGE,BACKUP2,REPORT_DATE FROM TB_PROPOSER_MSG) pm1
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_SERIES')sd1 on sd1.dict_code=pm1.REVIEW_SERIES
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='POSITIONAL_TITLES')sd2 on sd2.dict_code=pm1.propose_position
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_TYPE')sd3 on sd3.dict_code=pm1.pingshentype
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='CURRENT_STATE')sd4 on sd4.dict_code=pm1.CURRENT_STATE
    LEFT JOIN(SELECT judging_code,judging_name FROM BASE_JUDGING )bj1 on bj1.judging_code=pm1.BASE_JUDGING_SERIES
    LEFT JOIN(SELECT professial_code,professial_name FROM BASE_SERIES_PROFESSIAL)bp1 on bp1.professial_code=pm1.SHENBAOMAJOR_ID
    left join(select pro_id,jud_Result from TB_JUD_RESULT where JUD_CONTENT='99' and jud_Stage='15' )tjr1  on tjr1.pro_id=pm1.user_id
    ) pm ON a.id = pm.user_id
    where 1=1
    <if test="gljg != null and gljg != ''">
      and  b.UNIT_NAME like '%' || #{gljg} || '%'
    </if>
    <if test="pwh != null and pwh != ''">
      and   pm.judging_code=#{pwh}
    </if>
    <if test="xilie != null and xilie != ''">
      and  pm.dict_code=#{xilie}
    </if>
    <if test="sbzg != null and sbzg != ''">
      and   pm.dict_code2=#{sbzg}
    </if>
    <if test="nian != null and nian != ''">
      and to_char(pm.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      and to_char(pm.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    <if test="dqzt != null and dqzt != '' and dqzt != -1">
      <if test="dqzt == 0">
        and  pm.RESULT &lt;&gt; 3
      </if>
      <if test="dqzt== 3">
        and  (pm.RESULT=#{dqzt} or pm.RESULT is null) and pm.JUDGING_STAGE='15'
      </if>
    </if>
    <if test="sczt != null and sczt != ''">
      and  pm.CURRENT_STATE2=#{sczt}
    </if>
    ) g
    LEFT JOIN base_unit d ON g.basic_unitcode = d.unit_code
    ORDER BY
    add_time DESC
    ) e
    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page})f
      where  rn>(#{page}-1)*#{rows}
    </if>
  </select>

  <!--根据申报阶段查询全部记录个数 参评人员审查-->
  <select id="getJudgingProposerListCountCan" parameterType="pd" resultType="Integer">

    SELECT
    count(*)
    FROM
    (
    SELECT ROWNUM
    rn,
    e.*
    FROM
    (
    SELECT
    g.id,
    g.display_name,
    g.unit_name,
    g.XILIE,
    g.ZIGE,
    g.professial_name,
    g.LEIXING,
    g.judging_name,
    g.judging_code,
    g.state,
    g.CURRENT_STATE,
    d.unit_name AS basic_unitcode,
    g.RESULT,
    g.JUDGING_STAGE,
           g.REPORT_DATE
    FROM
    (
    SELECT
    *
    FROM
    (
    SELECT
    *
    FROM
    base_proposer
    WHERE
    id = ( SELECT USER_ID FROM TB_PROPOSER_MSG WHERE USER_ID = base_proposer.id
    AND (JUDGING_STAGE &gt;= #{judgingStage}+0 or JUDGING_STAGE='13')
    and user_id not in (select USER_ID FROM TB_PROPOSER_MSG WHERE JUDGING_STAGE='13' and CURRENT_STATE!='15' )
    and BASE_JUDGING_SERIES in (
    <if test="declareUnitcode != null and declareUnitcode != ''">
        select JUDGING_CODE FROM BASE_JUDGING where BUILD_UNIT=#{declareUnitcode} or MANAGE_UNIT=#{declareUnitcode}
    </if>
    <if test="JUDGING_CODE != null and JUDGING_CODE != ''">
      #{JUDGING_CODE}
    </if>
    ))
    <if test="displayName != null and displayName != ''">
      AND DISPLAY_NAME LIKE '%'||#{displayName}||'%'
    </if>
    ) a
    LEFT JOIN (SELECT unit_code,UNIT_NAME FROM base_unit) b ON a.declare_unitcode = b.unit_code
    LEFT JOIN
    (
    SELECT pm1.user_id,pm1.CURRENT_STATE CURRENT_STATE2,REPORT_DATE,pm1.JUDGING_STAGE,sd1.dict_code,sd1.dict_name "XILIE",sd2.dict_code dict_code2,sd2.dict_name "ZIGE",sd3.dict_name "LEIXING",
    bj1.judging_name ,bj1.judging_code,bp1.professial_name,tjr1.jud_Result "RESULT",sd4.DICT_NAME "CURRENT_STATE"  from
    (SELECT USER_ID, REVIEW_SERIES, propose_position, SHENBAOMAJOR_ID, pingshentype, BASE_JUDGING_SERIES,CURRENT_STATE,JUDGING_STAGE,REPORT_DATE FROM TB_PROPOSER_MSG) pm1
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_SERIES')sd1 on sd1.dict_code=pm1.REVIEW_SERIES
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='POSITIONAL_TITLES')sd2 on sd2.dict_code=pm1.propose_position
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_TYPE')sd3 on sd3.dict_code=pm1.pingshentype
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='CURRENT_STATE')sd4 on sd4.dict_code=pm1.CURRENT_STATE
    LEFT JOIN(SELECT judging_code,judging_name FROM BASE_JUDGING )bj1 on bj1.judging_code=pm1.BASE_JUDGING_SERIES
    LEFT JOIN(SELECT professial_code,professial_name FROM BASE_SERIES_PROFESSIAL)bp1 on bp1.professial_code=pm1.SHENBAOMAJOR_ID
    left join(select pro_id,jud_Result from TB_JUD_RESULT where JUD_CONTENT='99' and jud_Stage='15' )tjr1  on tjr1.pro_id=pm1.user_id
    ) pm ON a.id = pm.user_id
    where 1=1
    <if test="gljg != null and gljg != ''">
      and  b.UNIT_NAME like '%' || #{gljg} || '%'
    </if>
    <if test="pwh != null and pwh != ''">
      and   pm.judging_code=#{pwh}
    </if>
    <if test="xilie != null and xilie != ''">
      and  pm.dict_code=#{xilie}
    </if>
    <if test="sbzg != null and sbzg != ''">
      and   pm.dict_code2=#{sbzg}
    </if>
    <if test="nian != null and nian != ''">
      and to_char(pm.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      and to_char(pm.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    <if test="dqzt != null and dqzt != ''">
      <if test="dqzt ==0">
        and  pm.RESULT &lt;&gt; 3
      </if>
      <if test="dqzt== 3">
          and  (pm.RESULT=#{dqzt} or pm.RESULT is null) and pm.JUDGING_STAGE='15'
      </if>
    </if>
    <if test="sczt != null and sczt != ''">
      and  pm.CURRENT_STATE2=#{sczt}
    </if>
    ) g
    LEFT JOIN base_unit d ON g.basic_unitcode = d.unit_code
    ORDER BY
    add_time DESC
    ) e
    )f
  </select>
<!--通过评委会编码获取评委会管理单位名-->
  <select id="selectUnitByJudgingCode" resultType="pd" parameterType="pd">
select * from BASE_UNIT where UNIT_CODE=(select MANAGE_UNIT from BASE_JUDGING where JUDGING_CODE=#{JUDGING_CODE,jdbcType=VARCHAR})
  </select>
  <!--获取推荐专家信息-->
  <select id="selectCreateSpecialityTypeList" resultType="pd" parameterType="pd">
    SELECT
    *
    FROM
    (
    SELECT ROWNUM
    rn,
    a.ID,
    a.DISPLAY_NAME,
    a.ID_CARD_NO,
    a.UNIT_NAME,
    a.PROFESSIAL_NAME,
    a.CURRENT_STATE,
    a.JUDGING_STAGE,
    a.PARENTUNIT_CODE,
    a.UNIT_CODE,
      a.ADD_TIME
    FROM
    (
    SELECT
    BASEPR.ID,
    basepr.DISPLAY_NAME,
    basepr.ID_CARD_NO,
    basepr.UNIT_NAME,
    bp.PROFESSIAL_NAME,
    dict2.DICT_NAME AS DICT_NAME1,
    dict3.DICT_NAME AS CURRENT_STATE,
    tmsg.JUDGING_STAGE,
    basepr.PARENTUNIT_CODE,
    basepr.UNIT_CODE,
      basepr.ADD_TIME
    FROM
    (
    SELECT distinct
    BB.id,
    bb.DISPLAY_NAME,
    bb.ID_CARD_NO,
      bb.ADD_TIME,
    BASEUNIT.UNIT_NAME,
    baseunit.UNIT_CODE,
    BASEUNIT.PARENTUNIT_CODE
    FROM
    BASE_PROPOSER bb
    LEFT JOIN ( SELECT * FROM base_unit m START WITH
      m.UNIT_CODE = #{UNIT_CODE}
    CONNECT BY PRIOR m.UNIT_CODE = m.PARENTUNIT_CODE ) baseunit ON bb.declare_unitcode = baseunit.unit_code
    WHERE
    bb.STATE = 1
    <if test="DISPLAY_NAME != null and DISPLAY_NAME != ''">
      AND bb.DISPLAY_NAME LIKE '%'||#{DISPLAY_NAME}||'%'
    </if>
    <if test="backup2!=null">
      and bb.backup2=#{backup2}
    </if>
    AND baseunit.UNIT_CODE IS NOT NULL
    ) basepr
    LEFT JOIN TB_SPECIALITY_MSG tmsg ON tmsg.USER_ID = basepr.ID <if test="dqzt!=null and dqzt!=''">and CURRENT_STATE=#{dqzt}</if>
    LEFT JOIN BASE_SERIES_PROFESSIAL bp ON bp.PROFESSIAL_CODE = tmsg.SHENBAOMAJOR_ID
    LEFT JOIN SYS_DICT dict2 ON dict2.DICT_CODE = tmsg.REVIEW_SERIES
    AND dict2.group_name = 'REVIEW_SERIES'
    LEFT JOIN SYS_DICT dict3 ON dict3.DICT_CODE = tmsg.CURRENT_STATE
    AND dict3.group_name = 'CURRENT_STATE'

    WHERE  CURRENT_STATE is not null
    and tmsg.CURRENT_STATE!='19'
    and basepr.UNIT_CODE=#{UNIT_CODE}

    <if test="nian != null and nian != ''">
      and to_char(tmsg.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      and to_char(tmsg.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    order by ADD_TIME desc
    ) a
    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page})f
      where  rn>(#{page}-1)*#{rows}
    </if>
  </select>

  <!--获取推荐专家信息总数-->
  <select id="selectCreateSpecialityTypeCount" resultType="Integer" parameterType="pd">

    SELECT count(*)
    FROM
    (
    SELECT
    BASEPR.ID,
    basepr.DISPLAY_NAME,
    basepr.ID_CARD_NO,
    basepr.UNIT_NAME,
    bp.PROFESSIAL_NAME,
    dict2.DICT_NAME AS DICT_NAME1,
    dict3.DICT_NAME AS CURRENT_STATE,
    tmsg.JUDGING_STAGE,
    basepr.PARENTUNIT_CODE,
    basepr.UNIT_CODE
    FROM
    (
    SELECT distinct
    BB.id,
    bb.DISPLAY_NAME,
    bb.ID_CARD_NO,
    BASEUNIT.UNIT_NAME,
    baseunit.UNIT_CODE,
    BASEUNIT.PARENTUNIT_CODE
    FROM
    BASE_PROPOSER bb
    LEFT JOIN ( SELECT * FROM base_unit m START WITH
      m.UNIT_CODE = #{UNIT_CODE}
    CONNECT BY PRIOR m.UNIT_CODE = m.PARENTUNIT_CODE ) baseunit ON bb.declare_unitcode = baseunit.unit_code
    WHERE
    bb.STATE = 1
    <if test="DISPLAY_NAME != null and DISPLAY_NAME != ''">
      AND bb.DISPLAY_NAME LIKE '%'||#{DISPLAY_NAME}||'%'
    </if>
    <if test="backup2!=null">
      and bb.backup2=#{backup2}
    </if>
    AND baseunit.UNIT_CODE IS NOT NULL
    ) basepr
    LEFT JOIN TB_SPECIALITY_MSG tmsg ON tmsg.USER_ID = basepr.ID <if test="dqzt!=null and dqzt!=''">and CURRENT_STATE=#{dqzt}</if>
    LEFT JOIN BASE_SERIES_PROFESSIAL bp ON bp.PROFESSIAL_CODE = tmsg.SHENBAOMAJOR_ID
    LEFT JOIN SYS_DICT dict2 ON dict2.DICT_CODE = tmsg.REVIEW_SERIES
    AND dict2.group_name = 'REVIEW_SERIES'
    LEFT JOIN SYS_DICT dict3 ON dict3.DICT_CODE = tmsg.CURRENT_STATE
    AND dict3.group_name = 'CURRENT_STATE'
    WHERE  CURRENT_STATE is not null
    and tmsg.CURRENT_STATE!='19'
    and basepr.UNIT_CODE=#{UNIT_CODE}
    <if test="nian != null and nian != ''">
      and to_char(tmsg.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      and to_char(tmsg.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    ) a
  </select>



  <!--根据申报阶段分页查询全部推荐专家记录-->
  <select id="getJudgingSpecialityMsgList" parameterType="pd" resultType="java.util.Map">
    SELECT
    *
    FROM
    (
    SELECT ROWNUM
    rn,
    e.*
    FROM
    (SELECT
    g.id,
    g.display_name,
    g.unit_name,
    g.XILIE,
    null as ZIGE,
    g.professial_name,
    g.LEIXING,
    null as judging_name,
    null as judging_code,
    g.state,
    g.CURRENT_STATE,
    d.unit_name AS basic_unitcode,
    g.RESULT,
    g.backup2,
            g.REPORT_DATE
    FROM
    (
    SELECT
    *
    FROM
    (
    SELECT
    *
    FROM
    base_proposer
    WHERE
    DECLARE_UNITCODE  like #{declareUnitcode}||'%'
    <if test="displayName != null and displayName != ''">
      AND DISPLAY_NAME LIKE '%'||#{displayName}||'%'
    </if>
    AND backup2 = '1'
    AND id = ( SELECT USER_ID FROM TB_SPECIALITY_MSG WHERE USER_ID = base_proposer.id
    AND JUDGING_STAGE = #{judgingStage}
    )
    ) a
    LEFT JOIN (SELECT unit_code,UNIT_NAME FROM base_unit) b ON a.declare_unitcode = b.unit_code
    LEFT JOIN
    (
    SELECT pm1.user_id,pm1.CURRENT_STATE CURRENT_STATE2,REPORT_DATE,sd1.dict_code,sd1.dict_name "XILIE",sd3.dict_name "LEIXING",
    bp1.professial_name,tjr1.jud_Result "RESULT",sd4.DICT_NAME "CURRENT_STATE"  from
    (SELECT USER_ID, REVIEW_SERIES, SHENBAOMAJOR_ID, pingshentype,CURRENT_STATE,REPORT_DATE FROM TB_SPECIALITY_MSG) pm1
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_SERIES')sd1 on sd1.dict_code=pm1.REVIEW_SERIES
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_TYPE')sd3 on sd3.dict_code=pm1.pingshentype
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='CURRENT_STATE')sd4 on sd4.dict_code=pm1.CURRENT_STATE
    LEFT JOIN(SELECT professial_code,professial_name FROM BASE_SERIES_PROFESSIAL)bp1 on bp1.professial_code=pm1.SHENBAOMAJOR_ID
    left join(select pro_id,jud_Result from TB_JUD_RESULT where JUD_CONTENT='99' and jud_Stage=#{judgingStage} )tjr1  on tjr1.pro_id=pm1.user_id
    ) pm ON a.id = pm.user_id
    where 1=1
    <if test="gljg != null and gljg != ''">
      and  b.UNIT_NAME like '%' || #{gljg} || '%'
    </if>
    <if test="xilie != null and xilie != ''">
      and  pm.dict_code=#{xilie}
    </if>
    <if test="nian != null and nian != ''">
      and to_char(pm.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      and to_char(pm.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    <if test="dqzt != null and dqzt != '' and dqzt != -1">
      <if test="dqzt == 0">
        and  pm.RESULT &lt;&gt; 3
      </if>
      <if test="dqzt== 3">
        and  pm.RESULT=#{dqzt} or pm.RESULT is null
      </if>
    </if>
    <if test="sczt != null and sczt != ''">
      and  pm.CURRENT_STATE2=#{sczt}
    </if>
    ) g
    LEFT JOIN base_unit d ON g.basic_unitcode = d.unit_code
      order by add_time desc) e
    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page})f
      where  rn>(#{page}-1)*#{rows}
    </if>
  </select>

  <!--根据申报阶段查询全部记录个数-->
  <select id="getJudgingSpecialityMsgListCount" parameterType="pd" resultType="Integer">

    SELECT
    count(*)
    FROM
    (
    SELECT
    g.id,
    g.display_name,
    g.unit_name,
    g.XILIE,
    null as ZIGE,
    g.professial_name,
    g.LEIXING,
    null as judging_name,
    null as judging_code,
    g.state,
    g.CURRENT_STATE,
    d.unit_name AS basic_unitcode,
    g.RESULT,
    g.backup2,
           g.REPORT_DATE
    FROM
    (
    SELECT
    *
    FROM
    (
    SELECT
    *
    FROM
    base_proposer
    WHERE
    DECLARE_UNITCODE  like #{declareUnitcode}||'%'
    <if test="displayName != null and displayName != ''">
      AND DISPLAY_NAME LIKE '%'||#{displayName}||'%'
    </if>
    AND backup2 = '1'
    AND id = ( SELECT USER_ID FROM TB_SPECIALITY_MSG WHERE USER_ID = base_proposer.id AND JUDGING_STAGE = #{judgingStage} )
    ) a
    LEFT JOIN (SELECT unit_code,UNIT_NAME FROM base_unit) b ON a.declare_unitcode = b.unit_code
    LEFT JOIN
    (
    SELECT pm1.user_id,pm1.CURRENT_STATE CURRENT_STATE2,REPORT_DATE,sd1.dict_code,sd1.dict_name "XILIE",sd3.dict_name "LEIXING",
    bp1.professial_name,tjr1.jud_Result "RESULT",sd4.DICT_NAME "CURRENT_STATE"  from
    (SELECT USER_ID, REVIEW_SERIES, SHENBAOMAJOR_ID, pingshentype,CURRENT_STATE,REPORT_DATE FROM TB_SPECIALITY_MSG) pm1
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_SERIES')sd1 on sd1.dict_code=pm1.REVIEW_SERIES
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='REVIEW_TYPE')sd3 on sd3.dict_code=pm1.pingshentype
    LEFT JOIN(SELECT dict_code,dict_name FROM sys_dict WHERE group_name='CURRENT_STATE')sd4 on sd4.dict_code=pm1.CURRENT_STATE
    LEFT JOIN(SELECT professial_code,professial_name FROM BASE_SERIES_PROFESSIAL)bp1 on bp1.professial_code=pm1.SHENBAOMAJOR_ID
    left join(select pro_id,jud_Result from TB_JUD_RESULT where JUD_CONTENT='99' and jud_Stage=#{judgingStage} )tjr1  on tjr1.pro_id=pm1.user_id
    ) pm ON a.id = pm.user_id
    where 1=1
    <if test="gljg != null and gljg != ''">
      and  b.UNIT_NAME like '%' || #{gljg} || '%'
    </if>
    <if test="xilie != null and xilie != ''">
      and  pm.dict_code=#{xilie}
    </if>
    <if test="nian != null and nian != ''">
      and to_char(pm.REPORT_DATE,'yyyy')=#{nian}
    </if>
    <if test="nian == ''">
      and to_char(pm.REPORT_DATE,'yyyy')=to_char(sysdate,'yyyy')
    </if>
    <if test="dqzt != null and dqzt != '' and dqzt != -1">
      <if test="dqzt == 0">
        and  pm.RESULT &lt;&gt; 3
      </if>
      <if test="dqzt== 3">
        and  pm.RESULT=#{dqzt} or pm.RESULT is null
      </if>
    </if>
    <if test="sczt != null and sczt != ''">
      and  pm.CURRENT_STATE2=#{sczt}
    </if>
    ) g
    LEFT JOIN base_unit d ON g.basic_unitcode = d.unit_code
    ) e
  </select>
  <!--根据评委会修改状态-->
  <update id="updateJudgingProposerStage" parameterType="pd" >
    update tb_proposer_msg
    <set>
      <if test="judgingStage != null" >
        JUDGING_STAGE = #{judgingStage,jdbcType=VARCHAR},
      </if>
      <if test="currentState != null" >
        CURRENT_STATE = #{currentState,jdbcType=VARCHAR},
      </if>
      <if test="proposeState != null" >
        PROPOSE_STATE = #{proposeState,jdbcType=VARCHAR},
      </if>
      <if test="baseJudgingSeries != null and baseJudgingSeries!=''" >
        BASE_JUDGING_SERIES = #{baseJudgingSeries,jdbcType=VARCHAR},
      </if>
    </set>
    where BASE_JUDGING_SERIES = #{baseJudgingSeries,jdbcType=VARCHAR} and CURRENT_STATE=18
  </update>
</mapper>