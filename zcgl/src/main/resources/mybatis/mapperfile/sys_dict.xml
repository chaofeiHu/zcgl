<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="confing/mappers.sys_dict">
  <resultMap id="BaseResultMap" type="com.hz.demo.model.sys_dict">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 08 09:26:48 CST 2018.
    -->
    <id column="dict_id" jdbcType="VARCHAR" property="dictId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="dict_code" jdbcType="VARCHAR" property="dictCode" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="fsort" jdbcType="INTEGER" property="fsort" />
    <result column="has_child" jdbcType="INTEGER" property="hasChild" />
    <result column="add_user_id" jdbcType="VARCHAR" property="addUserId" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="state" jdbcType="SMALLINT" property="state" />
    <result column="backup1" jdbcType="VARCHAR" property="backup1" />
    <result column="backup2" jdbcType="VARCHAR" property="backup2" />
    <result column="backup3" jdbcType="VARCHAR" property="backup3" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 08 09:26:48 CST 2018.
    -->
    dict_id, group_name, dict_code, dict_name, parent_id, fsort, has_child, add_user_id, 
    add_time, state, backup1, backup2, backup3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 08 09:26:48 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_dict
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 08 09:26:48 CST 2018.
    -->
    delete from sys_dict
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hz.demo.model.sys_dict">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 08 09:26:48 CST 2018.
    -->
    insert into sys_dict (dict_id, group_name, dict_code, 
      dict_name, parent_id, fsort, 
      has_child, add_user_id, add_time, 
      state, backup1, backup2, 
      backup3)
    values (#{dictId,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, #{dictCode,jdbcType=VARCHAR}, 
      #{dictName,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{fsort,jdbcType=INTEGER}, 
      #{hasChild,jdbcType=INTEGER}, #{addUserId,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=SMALLINT}, #{backup1,jdbcType=VARCHAR}, #{backup2,jdbcType=VARCHAR}, 
      #{backup3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hz.demo.model.sys_dict">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 08 09:26:48 CST 2018.
    -->
    insert into sys_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        dict_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="dictCode != null">
        dict_code,
      </if>
      <if test="dictName != null">
        dict_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="fsort != null">
        fsort,
      </if>
      <if test="hasChild != null">
        has_child,
      </if>
      <if test="addUserId != null">
        add_user_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="backup1 != null">
        backup1,
      </if>
      <if test="backup2 != null">
        backup2,
      </if>
      <if test="backup3 != null">
        backup3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        #{dictId,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="dictCode != null">
        #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictName != null">
        #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="fsort != null">
        #{fsort,jdbcType=INTEGER},
      </if>
      <if test="hasChild != null">
        #{hasChild,jdbcType=INTEGER},
      </if>
      <if test="addUserId != null">
        #{addUserId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=SMALLINT},
      </if>
      <if test="backup1 != null">
        #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null">
        #{backup2,jdbcType=VARCHAR},
      </if>
      <if test="backup3 != null">
        #{backup3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pd">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 08 09:26:48 CST 2018.
    -->
    update sys_dict
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="dictCode != null">
        dict_code = #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictName != null">
        dict_name = #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="fsort != null">
        fsort = #{fsort,jdbcType=INTEGER},
      </if>
      <if test="hasChild != null">
        has_child = #{hasChild,jdbcType=INTEGER},
      </if>
      <if test="addUserId != null">
        add_user_id = #{addUserId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=SMALLINT},
      </if>
      <if test="backup1 != null">
        backup1 = #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null">
        backup2 = #{backup2,jdbcType=VARCHAR},
      </if>
      <if test="backup3 != null">
        backup3 = #{backup3,jdbcType=VARCHAR},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.demo.model.sys_dict">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 08 09:26:48 CST 2018.
    -->
    update sys_dict
    set group_name = #{groupName,jdbcType=VARCHAR},
      dict_code = #{dictCode,jdbcType=VARCHAR},
      dict_name = #{dictName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      fsort = #{fsort,jdbcType=INTEGER},
      has_child = #{hasChild,jdbcType=INTEGER},
      add_user_id = #{addUserId,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=SMALLINT},
      backup1 = #{backup1,jdbcType=VARCHAR},
      backup2 = #{backup2,jdbcType=VARCHAR},
      backup3 = #{backup3,jdbcType=VARCHAR}
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </update>

  <!--获取菜单页面树-->
  <select id="getTreeList" parameterType="pd" resultType="Map">
    SELECT dict_id as id,dict_name as text,parent_id as pid,group_name as attributes  FROM
    sys_dict ORDER BY fsort
  </select>

  <!--根据条件查询全部记录-->
  <select id="selectList" parameterType="pd" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from
    (select rownum rn,a.* from
    (select
    <include refid="Base_Column_List"/>
    from sys_dict WHERE 1=1
    <if test="parentId != null and parentId!='' ">
      and parent_id = #{parentId}
    </if>
    <if test="dictName != null and dictName!='' ">
      and dict_name like '%'||#{dictName}||'%'
    </if>
    ORDER by fsort) a
    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page}) b
      where  rn>(#{page}-1)*#{rows}
    </if>
  </select>

  <!--根据条件查询全部记录个数-->
  <select id="selectCount" parameterType="pd" resultType="Integer">
    select count(*) as listcount
    from sys_dict WHERE 1=1
    <if test="parentId != null and parentId!='' ">
      and parent_id = #{parentId}
    </if>
    <if test="dictName != null and dictName!='' ">
      and dict_name like '%'||#{dictName}||'%'
    </if>
  </select>

  <!--根据分组名查询该分组下所有成员信息数据-->
  <select id="selectByGroupName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_dict
    where group_name = #{groupName,jdbcType=VARCHAR} AND parent_id  != '00000000-0000-0000-0000-000000000000'and state='1'
    <if test="dictCode != null">
     and  dict_code like #{dictCode}||'%'
    </if>
    ORDER BY dict_code
  </select>
  <!--/* SELECT dict_id as id,dict_name as text,parent_id as pid,group_name as attributes  FROM-->
  <!--sys_dict ORDER BY fsort*/-->
  <!--<select id="recProDictTree" resultType="pd" parameterType="pd">-->
    <!--<if test="pid==''">-->
      <!--select PARENT_ID pid,DICT_ID id,DICT_NAME text from sys_dict where DICT_ID=#{unitCode} and state='1'-->
      <!--union all-->
      <!--select PARENT_ID pid,DICT_ID id,DICT_NAME text from sys_dict where PARENT_ID=#{unitCode} and state='1'-->
    <!--</if>-->
    <!--<if test="pid != '' and pid != null">-->
      <!--select (select DICT_ID from sys_dict where dict_code=#{pid} and group_name='EXAM_CLASS') pid,DICT_ID id,DICT_NAME text from sys_dict where dict_code like #{pid}||'%' and state='1'and group_name='EXAM_NAME'-->
    <!--</if>-->
  <!--</select>-->

  <select id="recProDictTree" resultType="pd" parameterType="pd">
     select * from( select SUBSTR(dict_code,0,2) pid,DICT_CODE	id,DICT_NAME text from sys_dict
			where SUBSTR(dict_code,0,2) in (SELECT DICT_CODE  from sys_dict where group_name='EXAM_CLASS') and state='1'and group_name='EXAM_NAME'
			union all select 'ksfl' as pid,DICT_CODE id,DICT_NAME text from sys_dict where group_name='EXAM_CLASS' and DICT_CODE!='ksfl'
			union all SELECT  '' as pid,DICT_CODE id,DICT_NAME text from sys_dict where group_name='EXAM_CLASS' and DICT_CODE='ksfl') a ORDER BY a.id
  </select>
  <!--根据条件查询实体-->
  <select id="getDictWhere" parameterType="com.hz.demo.core.PageData" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_dict
    where dict_code = #{dictCode,jdbcType=VARCHAR} AND group_name = #{groupName}
  </select>
  <!--查询评审系列数据-->
  <select id="getDictSeies" parameterType="com.hz.demo.core.PageData" resultMap="BaseResultMap">
   select <include refid="Base_Column_List" />
  from SYS_DICT where GROUP_NAME='REVIEW_SERIES' and PARENT_ID!='00000000-0000-0000-0000-000000000000' and state='1'
    ORDER by fsort
  </select>
  <!--根据条件查询全部记录个数-->
  <!--<select id="selectSeiesCount" parameterType="pd" resultType="Integer">-->
    <!--select count(*) as listcount-->
    <!--from sys_dict WHERE-->
    <!--GROUP_NAME='REVIEW_SERIES' and PARENT_ID!='00000000-0000-0000-0000-000000000000'-->
  <!--</select>-->
  <select id="getDictSeiesCode" parameterType="com.hz.demo.core.PageData" resultMap="BaseResultMap">
    select DICT_CODE
    from SYS_DICT where GROUP_NAME='REVIEW_SERIES' and PARENT_ID!='00000000-0000-0000-0000-000000000000'
    ORDER by fsort
  </select>
  <!--根据权限获取评审内容-->
  <select id="getDictByRole" parameterType="com.hz.demo.core.PageData" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> from SYS_DICT where GROUP_NAME='JUDGING_CONTENT' and DICT_CODE in(
      SELECT SUBSTR(FSORT, 3, 2) FSORT from SYS_ROLE
      where ROLE_ID in(SELECT ROLE_ID from SYS_USERROLE where USER_ID=#{userId})
        and FSORT like '71__' and state='1' )
  </select>

  <select id="getCreateSpecialityContent" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> from SYS_DICT
    where GROUP_NAME='JUDGING_CONTENT' and BACKUP1 like '%'||'1'||'%'
  </select>


</mapper>