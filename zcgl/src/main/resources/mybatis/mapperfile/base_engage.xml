<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="confing/mappers.base_engage">
  <resultMap id="BaseResultMap" type="com.hz.demo.model.base_engage">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 17 17:35:31 CST 2018.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="JUDGING_ID" jdbcType="VARCHAR" property="judgingId" />
    <result column="JUDGING_CODE" jdbcType="VARCHAR" property="judgingCode" />
    <result column="SPECIALITY_ID" jdbcType="VARCHAR" property="specialityId" />
    <result column="JURY_DUTY" jdbcType="VARCHAR" property="juryDuty" />
    <result column="AREACODE" jdbcType="VARCHAR" property="areacode" />
    <result column="BEGIN_DATE" jdbcType="TIMESTAMP" property="beginDate" />
    <result column="END_DATE" jdbcType="TIMESTAMP" property="endDate" />
    <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
    <result column="ADDUSERID" jdbcType="VARCHAR" property="adduserid" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
    <result column="BACK1" jdbcType="VARCHAR" property="back1" />
    <result column="BACK2" jdbcType="VARCHAR" property="back2" />
    <result column="BACK3" jdbcType="VARCHAR" property="back3" />
    <association property="baseSpeciality" javaType="com.hz.demo.model.base_speciality">
      <result column="ID" jdbcType="INTEGER" property="id" />
      <result column="PERSONAL_NUMBER" jdbcType="VARCHAR" property="personalNumber" />
      <result column="ADMINISTRATIVE_DUTY_LEVEL" jdbcType="VARCHAR" property="administrativeDutyLevel" />
      <result column="PROFESSIAL_DUTY_LEVEL" jdbcType="VARCHAR" property="professialDutyLevel" />
      <result column="PROFESSIAL_LEVEL" jdbcType="VARCHAR" property="professialLevel" />
      <result column="PROFESSIAL" jdbcType="VARCHAR" property="professial" />
      <result column="JOB_YEAR" jdbcType="VARCHAR" property="jobYear" />
      <result column="PERFORMANCE" jdbcType="VARCHAR" property="performance" />
      <result column="EDUCATION" jdbcType="VARCHAR" property="education" />
      <result column="DEGREE" jdbcType="VARCHAR" property="degree" />
      <result column="NOWUNIT" jdbcType="VARCHAR" property="nowunit" />
      <result column="AREACODE" jdbcType="VARCHAR" property="areacode" />
      <result column="SPECIALITY_NAME" jdbcType="VARCHAR" property="specialityName" />
      <result column="SEX" jdbcType="VARCHAR" property="sex" />
      <result column="ID_CARD_NO" jdbcType="VARCHAR" property="idCardNo" />
      <result column="BIRTHDATE" jdbcType="TIMESTAMP" property="birthdate" />
      <result column="GRADUATE_SCHOOL" jdbcType="VARCHAR" property="graduateSchool" />
      <result column="GRADUATE_DATE" jdbcType="TIMESTAMP" property="graduateDate" />
      <result column="MOBILEPHONE" jdbcType="VARCHAR" property="mobilephone" />
      <result column="TEL" jdbcType="VARCHAR" property="tel" />
      <result column="POSTAL_ADDRESS" jdbcType="VARCHAR" property="postalAddress" />
      <result column="POSTAL_CODE" jdbcType="VARCHAR" property="postalCode" />
      <result column="EMAIL" jdbcType="VARCHAR" property="email" />
      <result column="PRESENTATION" jdbcType="VARCHAR" property="presentation" />
      <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
      <result column="ADDUSERID" jdbcType="VARCHAR" property="adduserid" />
      <result column="STATE" jdbcType="DECIMAL" property="state" />
    </association>
  </resultMap>

  <resultMap id="BaseResultMap1" type="com.hz.demo.model.base_engage">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 17 17:35:31 CST 2018.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="JUDGING_ID" jdbcType="VARCHAR" property="judgingId" />
    <result column="SPECIALITY_ID" jdbcType="VARCHAR" property="specialityId" />
    <result column="jury_duty_name" jdbcType="VARCHAR" property="juryDuty" />
    <result column="AREACODE" jdbcType="VARCHAR" property="areacode" />
    <result column="BEGIN_DATE" jdbcType="TIMESTAMP" property="beginDate" />
    <result column="END_DATE" jdbcType="TIMESTAMP" property="endDate" />
    <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
    <result column="ADDUSERID" jdbcType="VARCHAR" property="adduserid" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
    <result column="BACK1" jdbcType="VARCHAR" property="back1" />
    <result column="BACK2" jdbcType="VARCHAR" property="back2" />
    <result column="BACK3" jdbcType="VARCHAR" property="back3" />
    <association property="baseSpeciality" javaType="com.hz.demo.model.base_speciality">
      <result column="ID" jdbcType="INTEGER" property="id" />
      <result column="PERSONAL_NUMBER" jdbcType="VARCHAR" property="personalNumber" />
      <result column="ADMINISTRATIVE_DUTY_LEVEL" jdbcType="VARCHAR" property="administrativeDutyLevel" />
      <result column="PROFESSIAL_DUTY_LEVEL" jdbcType="VARCHAR" property="professialDutyLevel" />
      <result column="PROFESSIAL_LEVEL" jdbcType="VARCHAR" property="professialLevel" />
      <result column="PROFESSIAL" jdbcType="VARCHAR" property="professial" />
      <result column="JOB_YEAR" jdbcType="VARCHAR" property="jobYear" />
      <result column="PERFORMANCE" jdbcType="VARCHAR" property="performance" />
      <result column="EDUCATION_NAME" jdbcType="VARCHAR" property="education" />
      <result column="DEGREE_NAME" jdbcType="VARCHAR" property="degree" />
      <result column="NOWUNIT" jdbcType="VARCHAR" property="nowunit" />
      <result column="AREACODE" jdbcType="VARCHAR" property="areacode" />
      <result column="SPECIALITY_NAME" jdbcType="VARCHAR" property="specialityName" />
      <result column="SEX_NAME" jdbcType="VARCHAR" property="sex" />
      <result column="ID_CARD_NO" jdbcType="VARCHAR" property="idCardNo" />
      <result column="BIRTHDATE" jdbcType="TIMESTAMP" property="birthdate" />
      <result column="GRADUATE_SCHOOL" jdbcType="VARCHAR" property="graduateSchool" />
      <result column="GRADUATE_DATE" jdbcType="TIMESTAMP" property="graduateDate" />
      <result column="MOBILEPHONE" jdbcType="VARCHAR" property="mobilephone" />
      <result column="TEL" jdbcType="VARCHAR" property="tel" />
      <result column="POSTAL_ADDRESS" jdbcType="VARCHAR" property="postalAddress" />
      <result column="POSTAL_CODE" jdbcType="VARCHAR" property="postalCode" />
      <result column="EMAIL" jdbcType="VARCHAR" property="email" />
      <result column="PRESENTATION" jdbcType="VARCHAR" property="presentation" />
      <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
      <result column="ADDUSERID" jdbcType="VARCHAR" property="adduserid" />
      <result column="STATE" jdbcType="DECIMAL" property="state" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 17 17:35:31 CST 2018.
    -->
    ID, JUDGING_ID, SPECIALITY_ID, JURY_DUTY, AREACODE, BEGIN_DATE, END_DATE, ADDTIME,
    ADDUSERID, STATE, BACK1, BACK2, BACK3
  </sql>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 17 17:35:31 CST 2018.
    -->
    select
    *
      from BASE_ENGAGE a left join base_speciality b on a.speciality_id = b.id
      where a.id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="pd">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 17 17:35:31 CST 2018.
    -->
    delete from BASE_ENGAGE
    where ID in
    <foreach collection="id.split(',')" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </delete>


  <insert id="insertEngage" parameterType="pd">
    insert into BASE_ENGAGE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="JUDGING_CODE != null">
        JUDGING_ID,
      </if>
      <if test="SPECIALITY_ID != null">
        SPECIALITY_ID,
      </if>
      <if test="JURY_DUTY != null">
        JURY_DUTY,
      </if>
      <if test="AREACODE != null">
        AREACODE,
      </if>
      <if test="BEGIN_DATE != null">
        BEGIN_DATE,
      </if>
      <if test="END_DATE != null">
        END_DATE,
      </if>
      <if test="ADDTIME != null">
        ADDTIME,
      </if>
      <if test="ADDUSERID != null">
        ADDUSERID,
      </if>
      <if test="STATE != null">
        STATE,
      </if>
      <if test="BACK1 != null">
        BACK1,
      </if>
      <if test="BACK2 != null">
        BACK2,
      </if>
      <if test="BACK3 != null">
        BACK3,
      </if>
      <if test="JUDGING_CODE != null">
        JUDGING_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="JUDGING_CODE != null">
        (select id from base_judging where judging_code=#{JUDGING_CODE}),
      </if>
      <if test="SPECIALITY_ID != null">
        #{SPECIALITY_ID,jdbcType=VARCHAR},
      </if>
      <if test="JURY_DUTY != null">
        #{JURY_DUTY,jdbcType=VARCHAR},
      </if>
      <if test="AREACODE != null">
        #{AREACODE,jdbcType=VARCHAR},
      </if>
      <if test="BEGIN_DATE != null">
        #{BEGIN_DATE,jdbcType=TIMESTAMP},
      </if>
      <if test="END_DATE != null">
        #{END_DATE,jdbcType=TIMESTAMP},
      </if>
      <if test="ADDTIME != null">
        #{ADDTIME,jdbcType=TIMESTAMP},
      </if>
      <if test="ADDUSERID != null">
        #{ADDUSERID,jdbcType=VARCHAR},
      </if>
      <if test="STATE != null">
        #{STATE,jdbcType=DECIMAL},
      </if>
      <if test="BACK1 != null">
        #{BACK1,jdbcType=VARCHAR},
      </if>
      <if test="BACK2 != null">
        #{BACK2,jdbcType=VARCHAR},
      </if>
      <if test="BACK3 != null">
        #{BACK3,jdbcType=VARCHAR},
      </if>
      <if test="JUDGING_CODE != null">
        #{JUDGING_CODE,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.hz.demo.model.base_engage">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 17 17:35:31 CST 2018.
    -->
    update BASE_ENGAGE
    <set>
      <if test="judgingId != null">
        JUDGING_ID = #{judgingId,jdbcType=VARCHAR},
      </if>
      <if test="specialityId != null">
        SPECIALITY_ID = #{specialityId,jdbcType=VARCHAR},
      </if>
      <if test="juryDuty != null">
        JURY_DUTY = #{juryDuty,jdbcType=VARCHAR},
      </if>
      <if test="areacode != null">
        AREACODE = #{areacode,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null">
        BEGIN_DATE = #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        END_DATE = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="addtime != null">
        ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="adduserid != null">
        ADDUSERID = #{adduserid,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=DECIMAL},
      </if>
      <if test="back1 != null">
        BACK1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        BACK2 = #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        BACK3 = #{back3,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
          type = #{type,jdbcType=VARCHAR},
      </if>
        <if test="reason != null">
            REASON = #{reason,jdbcType=VARCHAR},
        </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.demo.model.base_engage">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 17 17:35:31 CST 2018.
    -->
    update BASE_ENGAGE
    set JUDGING_ID = #{judgingId,jdbcType=VARCHAR},
      SPECIALITY_ID = #{specialityId,jdbcType=VARCHAR},
      JURY_DUTY = #{juryDuty,jdbcType=VARCHAR},
      AREACODE = #{areacode,jdbcType=VARCHAR},
      BEGIN_DATE = #{beginDate,jdbcType=TIMESTAMP},
      END_DATE = #{endDate,jdbcType=TIMESTAMP},
      ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      ADDUSERID = #{adduserid,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=DECIMAL},
      BACK1 = #{back1,jdbcType=VARCHAR},
      BACK2 = #{back2,jdbcType=VARCHAR},
      BACK3 = #{back3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>

<!--根据条件查询出baseEngage-->
  <select id="getModelWhere" parameterType="pd" resultMap="BaseResultMap">
    select
    *
    from BASE_ENGAGE
    where speciality_id = #{specialityId}
  </select>
  <!--根据条件/分页查询全部记录-->
  <select id="selectList" parameterType="pd" resultMap="BaseResultMap1">

    select * from
    (select rownum rn,f.* from
    (select * from (
    select t1.*,b1.DICT_NAME as jury_duty_name from   base_engage t1
    LEFT JOIN (select DICT_NAME,dict_code FROM sys_dict WHERE GROUP_NAME = 'JURY_DUTY')b1
    on t1.JURY_DUTY = b1.DICT_CODE
    where 0 = 1
    <if test="judgingId != null and judgingId!='' ">
      or judging_id = #{judgingId}
    </if>
    )a INNER join
    (
    select d.ID,d.PERSONAL_NUMBER,d.PROFESSIAL_DUTY_LEVEL,d.PROFESSIAL_LEVEL, d.PROFESSIAL,d.JOB_YEAR,
    d.PERFORMANCE,d.EDUCATION,d.DEGREE,d.NOWUNIT,d.AREACODE,d.SPECIALITY_NAME, d.SEX ,d.ID_CARD_NO,d.BIRTHDATE,
    d.GRADUATE_SCHOOL,d.GRADUATE_DATE,d.MOBILEPHONE,d.TEL,d.POSTAL_ADDRESS, d.POSTAL_CODE,d.EMAIL,d.PRESENTATION,
    d.ADDTIME,d.ADDUSERID,d.STATE,t1.dict_name as sex_name,t2.dict_name as ADMINISTRATIVE_DUTY_LEVEL,
    t3.dict_name as EDUCATION_NAME,t4.dict_name as DEGREE_NAME
    from base_speciality d
    left join sys_dict t1 on d.SEX = t1.dict_code and t1.group_name = 'SEX'
    left join sys_dict t2 on d.administrative_duty_level = t2.dict_code and t2.group_name = 'ADMINISTRATIVE_DUTY_LEVEL'
    left join sys_dict t3 on d.EDUCATION = t3.dict_code and t3.group_name = 'EDU_EDU'
    left join sys_dict t4 on d.DEGREE = t4.dict_code and t4.group_name = 'DEGREE'
    WHERE 1 = 1
    <if test="specialityName != null and specialityName !=''">
      and d.SPECIALITY_NAME like '%'||#{specialityName}||'%'
    </if>
    )e
    on a.speciality_id = e.id )f
    <if test="page != null and rows != null">
      where rownum  &lt;=#{rows}*#{page}) where rn > (#{page}-1)*#{rows}
    </if>
  </select>

  <!--根据条件查询全部记录个数-->
  <select id="selectCount" parameterType="pd" resultType="Integer">
    select count(*) as listcount from base_engage a inner join (
    select*
    from base_speciality d
    left join (select * FROM sys_dict WHERE GROUP_NAME = 'ADMINISTRATIVE_DUTY_LEVEL')b
    on d.administrative_duty_level = b.DICT_CODE  where 1=1
    <if test="specialityName != null and specialityName !=''">
      and SPECIALITY_NAME like '%'||#{specialityName}||'%'
    </if>
    )e  on a.speciality_id = e.id
    where 0 = 1
    <if test="judgingId != null and judgingId !=''">
      OR judging_id = #{judgingId}
    </if>
  </select>
  <!--查询评委会下专家信息-->
  <select id="selectEngagelistPage" resultType="pd" parameterType="page">
    <if test="pd.JUDGING_CODE != null and pd.JUDGING_CODE !=''">
    select  ben.id,BJ.JUDGING_CODE,bs.speciality_name,bs.nowunit,bs.id_card_no,bs.MOBILEPHONE,bs.TEL,
      bs.sex,bs.PROFESSIAL_DUTY_LEVEL,bs.PROFESSIAL_LEVEL,sys2.dict_name,ben.JURY_DUTY,	ben.JUDGING_ID,ben.type,ben.REASON,
    tb1.dict_name AS PROFESSIAL_LEVEL_NAME, ben.back1,
    tb2.dict_name AS PROFESSIAL_DUTY_NAME,
    (select count(*) from BASE_SPECIALITY_GROUP bsg where BSG.SPECIALITY_ID=bs.id and BSG.JUDGING_CODE=BJ.JUDGING_CODE) yn
      ,ben.SPECIALITY_ID
      from BASE_JUDGING bj
      LEFT JOIN BASE_ENGAGE ben on BEN.JUDGING_ID=BJ."ID"  and ben.STATE=1
      inner JOIN BASE_SPECIALITY bs on bs.id=ben.SPECIALITY_ID and bs.STATE=1
      LEFT JOIN sys_dict sys2 ON sys2.dict_code = bs.ADMINISTRATIVE_DUTY_LEVEL  AND sys2.group_name = 'ADMINISTRATIVE_DUTY_LEVEL'
      LEFT JOIN sys_dict tb1 ON bs.PROFESSIAL_LEVEL = tb1.dict_code AND tb1.group_name = 'POSITIONAL_TITLES'
      LEFT JOIN sys_dict tb2 ON bs.PROFESSIAL_DUTY_LEVEL = tb2.dict_code AND tb2.group_name = 'TITLE_LEVEL'
    where  1=1
          and  BJ.JUDGING_CODE=#{pd.JUDGING_CODE}
      <if test="pd.NOWUNIT != null and pd.NOWUNIT !=''">
        and bs.NOWUNIT like '%'||#{pd.NOWUNIT}||'%'
      </if>
      <if test="pd.SPECIALITY_NAME != null and pd.SPECIALITY_NAME !=''">
        and bs.SPECIALITY_NAME like '%'||#{pd.SPECIALITY_NAME}||'%'
      </if>
    </if>
  </select>

  <!--查询系列未分配专家数-->
  <select id="selectNoGroupSp" parameterType="pd" resultType="Integer">
      SELECT
          COUNT (*) AS listcount
      FROM
        BASE_SERIES_PROFESSIAL bs
        inner JOIN BASE_SPECIALITY bsg on bsg.RECOMMEND_MAJOR=bs.PROFESSIAL_CODE
      WHERE
          bs.PROFESSIAL_CODE in
          <if test="zhuanye==''">
              (SELECT distinct REVIEW_PROFESSIAL  FROM BASE_JUDGING_SERIES   WHERE JUDGING_CODE = #{JUDGING_CODE} )
          </if>
          <if test="zhuanye!=''">
              (#{zhuanye})
          </if>
          and bsg.id not in (select SPECIALITY_ID from BASE_ENGAGE where JUDGING_CODE=#{JUDGING_CODE} )
          and bs.state=1 and bsg.state=1
  </select>
  <select id="selectNoGroupSpRandom" parameterType="pd" resultType="Integer">
      select * from
        ( SELECT
            bsg.id SPECIALITY_ID
      FROM
          BASE_SERIES_PROFESSIAL bs
          inner JOIN BASE_SPECIALITY bsg on bsg.RECOMMEND_MAJOR=bs.PROFESSIAL_CODE
      WHERE
          bs.PROFESSIAL_CODE in
          <if test="zhuanye==''">
              (SELECT distinct REVIEW_PROFESSIAL  FROM BASE_JUDGING_SERIES   WHERE JUDGING_CODE = #{JUDGING_CODE} )
          </if>
          <if test="zhuanye!=''">
              (#{zhuanye})
          </if>
          and bsg.id not in (select SPECIALITY_ID from BASE_ENGAGE  where JUDGING_CODE=#{JUDGING_CODE} )
          and bs.state=1 and bsg.state=1
          order by dbms_random.value)
      where rownum&lt;= #{specialityCount}
  </select>


<!--获取评委会系列绑定专业下拉框-->
  <select id="selectProfessial" parameterType="pd" resultType="pd">
      select  * from BASE_SERIES_PROFESSIAL bp
      where  BP.PROFESSIAL_CODE in (
          SELECT distinct REVIEW_PROFESSIAL  FROM BASE_JUDGING_SERIES   WHERE JUDGING_CODE = #{JUDGING_CODE})
  </select>
<!--获取评委会专家信息-->
  <select id="selectEngageSpeciality" parameterType="pd" resultType="pd">
     SELECT
        ben.JUDGING_ID,
        ben.SPECIALITY_ID,
        ben.JURY_DUTY
    FROM
        BASE_ENGAGE ben
        LEFT JOIN BASE_JUDGING bj on ben.judging_id=bj.id
      where bj.JUDGING_CODE=#{JUDGING_CODE} and SPECIALITY_ID=#{SPECIALITY_ID}
  </select>

  <!--获取专业组专家信息-->
  <select id="selectGroupSpeciality" parameterType="pd" resultType="pd">
    select GROUP_ID,
    SPECIALITY_ID,
    GROUP_LEADER,
    JUDGING_CODE from BASE_SPECIALITY_GROUP
    where JUDGING_CODE=#{JUDGING_CODE} and SPECIALITY_ID=#{SPECIALITY_ID}
  </select>
</mapper>