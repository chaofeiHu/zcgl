<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="confing/mappers.rec_result">
  <resultMap id="BaseResultMap" type="com.hz.demo.model.rec_result">
  <!--
    WARNING - @mbg.generated
    This element is automatically generated by MyBatis Generator, do not modify.
    This element was generated on Thu Nov 01 17:28:13 CST 2018.
  -->
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="YEAR_NO" jdbcType="VARCHAR" property="yearNo" />
    <result column="AREA_CODE" jdbcType="VARCHAR" property="areaCode" />
    <result column="JUDGING_CODE" jdbcType="VARCHAR" property="judgingCode" />
    <result column="GROUP_ID" jdbcType="VARCHAR" property="groupId" />
    <result column="UNIT_CODE" jdbcType="VARCHAR" property="unitCode" />
    <result column="REVIEW_SERIES" jdbcType="VARCHAR" property="reviewSeries" />
    <result column="TITLE_LEVEL" jdbcType="VARCHAR" property="titleLevel" />
    <result column="POSITIONAL_TITLES" jdbcType="VARCHAR" property="positionalTitles" />
    <result column="PROFESSIAL_CODE" jdbcType="VARCHAR" property="professialCode" />
    <result column="REVIEW_TYPE" jdbcType="VARCHAR" property="reviewType" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="ID_CARD_NO" jdbcType="VARCHAR" property="idCardNo" />
    <result column="SEX" jdbcType="VARCHAR" property="sex" />
    <result column="GETTIME" jdbcType="TIMESTAMP" property="gettime" />
    <result column="GETWAY" jdbcType="VARCHAR" property="getway" />
    <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
    <result column="BACK1" jdbcType="VARCHAR" property="back1" />
    <result column="BACK2" jdbcType="VARCHAR" property="back2" />
    <result column="BACK3" jdbcType="VARCHAR" property="back3" />
    <result column="ISBUILDCERTIFICATE" jdbcType="DECIMAL" property="isbuildcertificate" />
    <result column="ISBUILEFILE" jdbcType="DECIMAL" property="isbuilefile" />
    <result column="FILE_CODE" jdbcType="VARCHAR" property="fileCode" />
  </resultMap>

  <resultMap id="BaseResultMap1" type="com.hz.demo.model.rec_result">
  <id column="ID" jdbcType="DECIMAL" property="id" />
  <result column="YEAR_NO" jdbcType="VARCHAR" property="yearNo" />
  <result column="AREA_NAME" jdbcType="VARCHAR" property="areaCode" />
  <result column="JUDGING_NAME" jdbcType="VARCHAR" property="judgingCode" />
  <result column="GROUP_NAME" jdbcType="VARCHAR" property="groupId" />
  <result column="UNIT_NAME" jdbcType="VARCHAR" property="unitCode" />
  <result column="SERIES_NAME" jdbcType="VARCHAR" property="reviewSeries" />
  <result column="LEVEL_NAME" jdbcType="VARCHAR" property="titleLevel" />
  <result column="POSITIONAL_NAME" jdbcType="VARCHAR" property="positionalTitles" />
  <result column="PROFESSIAL_NAME" jdbcType="VARCHAR" property="professialCode" />
  <result column="REVIEW_TYPE_NAME" jdbcType="VARCHAR" property="reviewType" />
  <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
  <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
  <result column="ID_CARD_NO" jdbcType="VARCHAR" property="idCardNo" />
  <result column="SEX_NAME" jdbcType="VARCHAR" property="sex" />
  <result column="GETTIME" jdbcType="TIMESTAMP" property="gettime" />
  <result column="GETWAY" jdbcType="VARCHAR" property="getway" />
  <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
  <result column="BACK1" jdbcType="VARCHAR" property="back1" />
  <result column="AREA_GRADE" jdbcType="VARCHAR" property="back2" />
  <result column="PNAME" jdbcType="VARCHAR" property="back3" />
  <result column="ISBUILDCERTIFICATE" jdbcType="DECIMAL" property="isbuildcertificate" />
  <result column="ISBUILEFILE" jdbcType="DECIMAL" property="isbuilefile" />
  <result column="FILE_CODE" jdbcType="VARCHAR" property="fileCode" />
</resultMap>
    <resultMap id="BaseResultMap3" type="com.hz.demo.model.rec_result">
        <id column="ID" jdbcType="DECIMAL" property="id" />
        <result column="YEAR_NO" jdbcType="VARCHAR" property="yearNo" />
        <result column="AREA_NAME" jdbcType="VARCHAR" property="areaCode" />
        <result column="JUDGING_NAME" jdbcType="VARCHAR" property="judgingCode" />
        <result column="GROUP_NAME" jdbcType="VARCHAR" property="groupId" />
        <result column="UNIT_NAME" jdbcType="VARCHAR" property="unitCode" />
        <result column="SERIES_NAME" jdbcType="VARCHAR" property="reviewSeries" />
        <result column="LEVEL_NAME" jdbcType="VARCHAR" property="titleLevel" />
        <result column="POSITIONAL_NAME" jdbcType="VARCHAR" property="positionalTitles" />
        <result column="PROFESSIAL_NAME" jdbcType="VARCHAR" property="professialCode" />
        <result column="REVIEW_TYPE_NAME" jdbcType="VARCHAR" property="reviewType" />
        <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
        <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
        <result column="ID_CARD_NO" jdbcType="VARCHAR" property="idCardNo" />
        <result column="SEX_NAME" jdbcType="VARCHAR" property="sex" />
        <result column="GETTIME" jdbcType="TIMESTAMP" property="gettime" />
        <result column="GETWAY" jdbcType="VARCHAR" property="getway" />
        <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
        <result column="BACK1" jdbcType="VARCHAR" property="back1" />
        <result column="AREA_GRADE" jdbcType="VARCHAR" property="back2" />
        <result column="PNAME" jdbcType="VARCHAR" property="back3" />
        <result column="ISBUILDCERTIFICATE" jdbcType="DECIMAL" property="isbuildcertificate" />
        <result column="ISBUILEFILE" jdbcType="DECIMAL" property="isbuilefile" />
        <result column="FILE_CODE" jdbcType="VARCHAR" property="fileCode" />
    </resultMap>

    <!--包含证书-->
  <resultMap id="BaseResultMap2" type="com.hz.demo.model.rec_result">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="YEAR_NO" jdbcType="VARCHAR" property="yearNo" />
    <result column="AREA_NAME" jdbcType="VARCHAR" property="areaCode" />
    <result column="JUDGING_NAME" jdbcType="VARCHAR" property="judgingCode" />
    <result column="GROUP_NAME" jdbcType="VARCHAR" property="groupId" />
    <result column="UNIT_NAME" jdbcType="VARCHAR" property="unitCode" />
    <result column="SERIES_NAME" jdbcType="VARCHAR" property="reviewSeries" />
    <result column="LEVEL_NAME" jdbcType="VARCHAR" property="titleLevel" />
    <result column="POSITIONAL_NAME" jdbcType="VARCHAR" property="positionalTitles" />
    <result column="PROFESSIAL_NAME" jdbcType="VARCHAR" property="professialCode" />
    <result column="REVIEW_TYPE_NAME" jdbcType="VARCHAR" property="reviewType" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="ID_CARD_NO" jdbcType="VARCHAR" property="idCardNo" />
    <result column="SEX" jdbcType="VARCHAR" property="sex" />
    <result column="GETTIME" jdbcType="TIMESTAMP" property="gettime" />
    <result column="GETWAY" jdbcType="VARCHAR" property="getway" />
    <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
    <result column="BACK1" jdbcType="VARCHAR" property="back1" />
    <result column="AREA_GRADE" jdbcType="VARCHAR" property="back2" />
    <result column="PNAME" jdbcType="VARCHAR" property="back3" />
    <result column="ISBUILDCERTIFICATE" jdbcType="DECIMAL" property="isbuildcertificate" />
    <result column="ISBUILEFILE" jdbcType="DECIMAL" property="isbuilefile" />
    <result column="FILE_CODE" jdbcType="VARCHAR" property="fileCode" />
    <association property="recCertificate" column="id" javaType="com.hz.demo.model.rec_certificate">
      <id column="cer.ID" property="id" jdbcType="DECIMAL" />
      <result column="cer.RESULTID" property="resultid" jdbcType="DECIMAL" />
      <result column="cer.CERTIFICATE_NUMBER" property="certificateNumber" jdbcType="VARCHAR" />
      <result column="cer.CERTIFICATE_PATH" property="certificatePath" jdbcType="VARCHAR" />
      <result column="cer.ADDTIME" property="addtime" jdbcType="TIMESTAMP" />
      <result column="cer.BACK1" property="back1" jdbcType="VARCHAR" />
      <result column="cer.BACK2" property="back2" jdbcType="VARCHAR" />
      <result column="cer.BACK3" property="back3" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 01 17:28:13 CST 2018.
    -->
    ID, YEAR_NO, AREA_CODE, JUDGING_CODE, GROUP_ID, UNIT_CODE, REVIEW_SERIES, TITLE_LEVEL,
    POSITIONAL_TITLES, PROFESSIAL_CODE, REVIEW_TYPE, USER_ID, USER_NAME, ID_CARD_NO,
    SEX, GETTIME, GETWAY, ADDTIME, BACK1, BACK2, BACK3,ISBUILDCERTIFICATE,ISBUILEFILE,FILE_CODE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 01 17:28:13 CST 2018.
    -->
    select
    <include refid="Base_Column_List" />
    from REC_RESULT
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <!-- 根据ID查询通过人员返回实体信息 (将编码用实际代表的中文信息填充)-->
  <select id="selectOneById" parameterType="java.math.BigDecimal" resultMap="BaseResultMap1">
    select t1.*,tb1.*,tb2.JUDGING_NAME,tb3.GROUP_NAME,tb4.UNIT_NAME,tb5.dict_name as SERIES_NAME,tb6.*,tb7.PROFESSIAL_NAME,
    tb8.DICT_NAME as REVIEW_TYPE_NAME,tb9.DICT_NAME as SEX_NAME
    from REC_RESULT t1
    left join
    (select tab1.AREA_CODE as AREA_NUMBER,tab1.AREA_NAME,tab1.AREA_GRADE,tab2.AREA_NAME as pname,tab2.AREA_GRADE as pgrade from SYS_AREA tab1
    left join sys_area tab2 on tab1.AREA_PARENTCODE = tab2.AREA_CODE) tb1 on t1.AREA_CODE = tb1.AREA_NUMBER
    left join BASE_JUDGING tb2 on t1.JUDGING_CODE = tb2.JUDGING_CODE
    left join BASE_SUBJECT_GROUP tb3 on tb3.id = t1.GROUP_ID
    left join BASE_UNIT tb4 on tb4.UNIT_CODE = t1.UNIT_CODE
    left join (select * from sys_dict where GROUP_NAME = 'REVIEW_SERIES') tb5 on tb5.DICT_CODE = t1.REVIEW_SERIES
    left join
    (select tab3.dict_code,tab3.dict_name as POSITIONAL_NAME,tab4.dict_name as level_name from sys_dict tab3 left join sys_dict tab4 on tab3.BACKUP2 = tab4.DICT_CODE
    where tab3.GROUP_NAME = 'POSITIONAL_TITLES') tb6  on tb6.DICT_CODE = t1.POSITIONAL_TITLES
    left join BASE_SERIES_PROFESSIAL tb7 on tb7.PROFESSIAL_CODE = t1.PROFESSIAL_CODE
    left join sys_dict tb8 on tb8.DICT_CODE = t1.REVIEW_TYPE and tb8.GROUP_NAME = 'REVIEW_TYPE'
    left join sys_dict tb9 on tb9.DICT_CODE = t1.sex and tb9.GROUP_NAME = 'SEX'
    where t1.ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 01 17:28:13 CST 2018.
    -->
    delete from REC_RESULT
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.hz.demo.model.rec_result">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 01 17:28:13 CST 2018.
    -->
    insert into REC_RESULT (ID, YEAR_NO, AREA_CODE,
      JUDGING_CODE, GROUP_ID, UNIT_CODE,
      REVIEW_SERIES, TITLE_LEVEL, POSITIONAL_TITLES,
      PROFESSIAL_CODE, REVIEW_TYPE, USER_ID,
      USER_NAME, ID_CARD_NO, SEX,
      GETTIME, GETWAY, ADDTIME,
      BACK1, BACK2, BACK3
      )
    values (#{id,jdbcType=DECIMAL}, #{yearNo,jdbcType=VARCHAR}, #{areaCode,jdbcType=VARCHAR},
      #{judgingCode,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, #{unitCode,jdbcType=VARCHAR},
      #{reviewSeries,jdbcType=VARCHAR}, #{titleLevel,jdbcType=VARCHAR}, #{positionalTitles,jdbcType=VARCHAR},
      #{professialCode,jdbcType=VARCHAR}, #{reviewType,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
      #{userName,jdbcType=VARCHAR}, #{idCardNo,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
      #{gettime,jdbcType=TIMESTAMP}, #{getway,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP},
      #{back1,jdbcType=VARCHAR}, #{back2,jdbcType=VARCHAR}, #{back3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hz.demo.model.rec_result">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 01 17:28:13 CST 2018.
    -->
    insert into REC_RESULT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="yearNo != null">
        YEAR_NO,
      </if>
      <if test="areaCode != null">
        AREA_CODE,
      </if>
      <if test="judgingCode != null">
        JUDGING_CODE,
      </if>
      <if test="groupId != null">
        GROUP_ID,
      </if>
      <if test="unitCode != null">
        UNIT_CODE,
      </if>
      <if test="reviewSeries != null">
        REVIEW_SERIES,
      </if>
      <if test="titleLevel != null">
        TITLE_LEVEL,
      </if>
      <if test="positionalTitles != null">
        POSITIONAL_TITLES,
      </if>
      <if test="professialCode != null">
        PROFESSIAL_CODE,
      </if>
      <if test="reviewType != null">
        REVIEW_TYPE,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="idCardNo != null">
        ID_CARD_NO,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="gettime != null">
        GETTIME,
      </if>
      <if test="getway != null">
        GETWAY,
      </if>
      <if test="addtime != null">
        ADDTIME,
      </if>
      <if test="back1 != null">
        BACK1,
      </if>
      <if test="back2 != null">
        BACK2,
      </if>
      <if test="back3 != null">
        BACK3,
      </if>
      <if test="isbuildcertificate != null">
        ISBUILDCERTIFICATE,
      </if>
      <if test="isbuilefile != null">
        ISBUILEFILE,
      </if>
      <if test="fileCode != null">
        FILE_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="yearNo != null">
        #{yearNo,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="judgingCode != null">
        #{judgingCode,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null">
        #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="reviewSeries != null">
        #{reviewSeries,jdbcType=VARCHAR},
      </if>
      <if test="titleLevel != null">
        #{titleLevel,jdbcType=VARCHAR},
      </if>
      <if test="positionalTitles != null">
        #{positionalTitles,jdbcType=VARCHAR},
      </if>
      <if test="professialCode != null">
        #{professialCode,jdbcType=VARCHAR},
      </if>
      <if test="reviewType != null">
        #{reviewType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null">
        #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="gettime != null">
        #{gettime,jdbcType=TIMESTAMP},
      </if>
      <if test="getway != null">
        #{getway,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="back1 != null">
        #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        #{back3,jdbcType=VARCHAR},
      </if>
      <if test="isbuildcertificate != null">
        #{isbuildcertificate,jdbcType=DECIMAL},
      </if>
      <if test="isbuilefile != null">
        #{isbuilefile,jdbcType=DECIMAL},
      </if>
      <if test="fileCode != null">
        #{fileCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.demo.model.rec_result">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 01 17:28:13 CST 2018.
    -->
    update REC_RESULT
    <set>
      <if test="yearNo != null">
        YEAR_NO = #{yearNo,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        AREA_CODE = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="judgingCode != null">
        JUDGING_CODE = #{judgingCode,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        GROUP_ID = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null">
        UNIT_CODE = #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="reviewSeries != null">
        REVIEW_SERIES = #{reviewSeries,jdbcType=VARCHAR},
      </if>
      <if test="titleLevel != null">
        TITLE_LEVEL = #{titleLevel,jdbcType=VARCHAR},
      </if>
      <if test="positionalTitles != null">
        POSITIONAL_TITLES = #{positionalTitles,jdbcType=VARCHAR},
      </if>
      <if test="professialCode != null">
        PROFESSIAL_CODE = #{professialCode,jdbcType=VARCHAR},
      </if>
      <if test="reviewType != null">
        REVIEW_TYPE = #{reviewType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null">
        ID_CARD_NO = #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="gettime != null">
        GETTIME = to_date(#{gettime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="getway != null">
        GETWAY = #{getway,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="back1 != null">
        BACK1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        BACK2 = #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        BACK3 = #{back3,jdbcType=VARCHAR},
      </if>
      <if test="isbuildcertificate != null">
        ISBUILDCERTIFICATE = #{isbuildcertificate,jdbcType=VARCHAR},
      </if>
      <if test="isbuilefile != null">
        ISBUILEFILE = #{isbuilefile,jdbcType=DECIMAL},
      </if>
      <if test="fileCode != null">
        FILE_CODE = #{fileCode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.demo.model.rec_result">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 01 17:28:13 CST 2018.
    -->
    update REC_RESULT
    set YEAR_NO = #{yearNo,jdbcType=VARCHAR},
      AREA_CODE = #{areaCode,jdbcType=VARCHAR},
      JUDGING_CODE = #{judgingCode,jdbcType=VARCHAR},
      GROUP_ID = #{groupId,jdbcType=VARCHAR},
      UNIT_CODE = #{unitCode,jdbcType=VARCHAR},
      REVIEW_SERIES = #{reviewSeries,jdbcType=VARCHAR},
      TITLE_LEVEL = #{titleLevel,jdbcType=VARCHAR},
      POSITIONAL_TITLES = #{positionalTitles,jdbcType=VARCHAR},
      PROFESSIAL_CODE = #{professialCode,jdbcType=VARCHAR},
      REVIEW_TYPE = #{reviewType,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      ID_CARD_NO = #{idCardNo,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      GETTIME =to_date(#{gettime,jdbcType=TIMESTAMP},'yyyy-mm-dd hh24:mi:ss'),
      GETWAY = #{getway,jdbcType=VARCHAR},
      ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      BACK1 = #{back1,jdbcType=VARCHAR},
      BACK2 = #{back2,jdbcType=VARCHAR},
      BACK3 = #{back3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>

  <!--评审结果列表-->
  <select id="selectList" parameterType="pd" resultMap="BaseResultMap1">
    select *
    from
    (select rownum rn,e.* from
    (
    select t1.*,tb1.*,tb2.JUDGING_NAME,tb3.GROUP_NAME,tb4.UNIT_NAME,tb5.dict_name as SERIES_NAME,tb6.*,tb7.PROFESSIAL_NAME,
    tb8.DICT_NAME as REVIEW_TYPE_NAME,tb9.DICT_NAME as SEX_NAME
    from REC_RESULT t1
    left join
    (select tab1.AREA_CODE as AREA_NUMBER,tab1.AREA_NAME,tab1.AREA_GRADE,tab2.AREA_NAME as pname,tab2.AREA_GRADE as pgrade,tab2.AREA_CODE as pcode
      from SYS_AREA tab1 left join sys_area tab2 on tab1.AREA_PARENTCODE = tab2.AREA_CODE) tb1 on t1.AREA_CODE = tb1.AREA_NUMBER
    left join BASE_JUDGING tb2 on t1.JUDGING_CODE = tb2.JUDGING_CODE
    left join BASE_SUBJECT_GROUP tb3 on tb3.id = t1.GROUP_ID
    left join BASE_UNIT tb4 on tb4.UNIT_CODE = t1.UNIT_CODE
    left join (select * from sys_dict where GROUP_NAME = 'REVIEW_SERIES') tb5 on tb5.DICT_CODE = t1.REVIEW_SERIES
    left join
    (select tab3.dict_code,tab3.dict_name as POSITIONAL_NAME,tab4.dict_name as level_name from sys_dict tab3 left join sys_dict tab4 on tab3.BACKUP2 = tab4.DICT_CODE
    where tab3.GROUP_NAME = 'POSITIONAL_TITLES') tb6  on tb6.DICT_CODE = t1.POSITIONAL_TITLES
    left join BASE_SERIES_PROFESSIAL tb7 on tb7.PROFESSIAL_CODE = t1.PROFESSIAL_CODE
    left join sys_dict tb8 on tb8.DICT_CODE = t1.REVIEW_TYPE and tb8.GROUP_NAME = 'REVIEW_TYPE'
    left join sys_dict tb9 on tb9.DICT_CODE = t1.sex and tb9.GROUP_NAME = 'SEX'
    where t1.JUDGING_CODE in
    (
    select JUDGING_CODE from base_judging where BACK3 = 1
    <if test="judgingId != null and judgingId !=''">
      and ID = #{judgingId}
    </if>
    <if test="manageUnitCode != null and manageUnitCode !=''">
      and MANAGE_UNIT = #{manageUnitCode}
    </if>
    )
    <if test="userName != null and userName !=''">
      and t1.USER_NAME  like '%'||#{userName}||'%'
    </if>
    <if test="yearNo != null and yearNo !=''">
      and t1.YEAR_NO = #{yearNo}
    </if>
    <if test="reviewSeries != null and reviewSeries !=''">
      and t1.REVIEW_SERIES = #{reviewSeries}
    </if>
    <if test="professialCode != null and professialCode !=''">
      and t1.PROFESSIAL_CODE = #{professialCode}
    </if>
    <if test="areaCode != null and areaCode !=''">
      and t1.AREA_CODE IN
      (select  AREA_CODE from SYS_AREA where AREA_CODE = #{areaCode} OR AREA_GRADE = '3' AND AREA_PARENTCODE = #{areaCode})
    </if>
    ORDER BY t1.YEAR_NO DESC ,t1.AREA_CODE,tb1.AREA_GRADE,t1.ADDTIME DESC
    )e
    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page})
      where  rn>(#{page}-1)*#{rows}
    </if>
  </select>

  <!--查询评审结果记录个数-->
  <select id="selectCount" parameterType="pd" resultType="Integer">
    select count(*) as listcount from REC_RESULT  where JUDGING_CODE in
    (
    select JUDGING_CODE from base_judging where BACK3 = 1
    <if test="judgingId != null and judgingId !=''">
      and ID = #{judgingId}
    </if>
    <if test="manageUnitCode != null and manageUnitCode !=''">
      and MANAGE_UNIT = #{manageUnitCode}
    </if>
    )
    <if test="userName != null and userName !=''">
      and USER_NAME  like '%'||#{userName}||'%'
    </if>
    <if test="yearNo != null and yearNo !=''">
      and YEAR_NO = #{yearNo}
    </if>
    <if test="reviewSeries != null and reviewSeries !=''">
      and REVIEW_SERIES = #{reviewSeries}
    </if>
    <if test="professialCode != null and professialCode !=''">
      and PROFESSIAL_CODE = #{professialCode}
    </if>
    <if test="areaCode != null and areaCode !=''">
      and AREA_CODE IN
      (select  AREA_CODE from SYS_AREA where AREA_CODE = #{areaCode} OR AREA_GRADE = '3' AND AREA_PARENTCODE = #{areaCode})
    </if>
  </select>

  <!--评审结果列表//连证书-->
  <select id="selectListCertificate" parameterType="pd" resultMap="BaseResultMap2">
    select *
    from
    (select rownum rn,e.* from
    (
    select t1.*,tb1.*,tb2.JUDGING_NAME,tb3.GROUP_NAME,tb4.UNIT_NAME,tb5.dict_name as SERIES_NAME,tb6.*,tb7.PROFESSIAL_NAME,tb8.DICT_NAME as REVIEW_TYPE_NAME,
    cer.id "cer.ID",cer.RESULTID "cer.RESULTID",cer.ADDTIME "cer.ADDTIME",cer.CERTIFICATE_NUMBER "cer.CERTIFICATE_NUMBER",cer.CERTIFICATE_PATH "cer.CERTIFICATE_PATH",
    cer.BACK1 "cer.BACK1",cer.BACK2 "cer.BACK2",cer.BACK3 "cer.BACK3"
    from REC_RESULT t1
    left join REC_CERTIFICATE cer on t1.id=cer.resultid
    left join
    (select tab1.AREA_CODE as AREA_NUMBER,tab1.AREA_NAME,tab1.AREA_GRADE,tab2.AREA_NAME as pname,tab2.AREA_GRADE as pgrade from SYS_AREA tab1
    left join sys_area tab2 on tab1.AREA_PARENTCODE = tab2.AREA_CODE) tb1 on t1.AREA_CODE = tb1.AREA_NUMBER
    left join BASE_JUDGING tb2 on t1.JUDGING_CODE = tb2.JUDGING_CODE
    left join BASE_SUBJECT_GROUP tb3 on tb3.id = t1.GROUP_ID
    left join BASE_UNIT tb4 on tb4.UNIT_CODE = t1.UNIT_CODE
    left join (select * from sys_dict where GROUP_NAME = 'REVIEW_SERIES') tb5 on tb5.DICT_CODE = t1.REVIEW_SERIES
    left join
    (select tab3.dict_code,tab3.dict_name as POSITIONAL_NAME,tab4.dict_name as level_name from sys_dict tab3 left join sys_dict tab4 on tab3.BACKUP2 = tab4.DICT_CODE
    where tab3.GROUP_NAME = 'POSITIONAL_TITLES') tb6  on tb6.DICT_CODE = t1.POSITIONAL_TITLES
    left join BASE_SERIES_PROFESSIAL tb7 on tb7.PROFESSIAL_CODE = t1.PROFESSIAL_CODE
    left join sys_dict tb8 on tb8.DICT_CODE = t1.REVIEW_TYPE and tb8.GROUP_NAME = 'REVIEW_TYPE'
    where t1.JUDGING_CODE in
    (
    select JUDGING_CODE from base_judging where BACK3 = 1
    <if test="judgingId != null and judgingId !=''">
      and ID = #{judgingId}
    </if>
    <if test="manageUnitCode != null and manageUnitCode !=''">
      and MANAGE_UNIT = #{manageUnitCode}
    </if>
    )
    <if test="userName != null and userName !=''">
      and t1.USER_NAME  like '%'||#{userName}||'%'
    </if>
    <if test="yearNo != null and yearNo !=''">
      and t1.YEAR_NO = #{yearNo}
    </if>
    <if test="reviewSeries != null and reviewSeries !=''">
      and t1.REVIEW_SERIES = #{reviewSeries}
    </if>
    <if test="professialCode != null and professialCode !=''">
      and t1.PROFESSIAL_CODE = #{professialCode}
    </if>
    <if test="hasCertificate != null and hasCertificate!='' and hasCertificate ==1">
      and cer.id is not null
    </if>
    <if test="hasCertificate != null  and hasCertificate!='' and hasCertificate ==0">
      and cer.id is  null
    </if>
    <if test="hasCertificatePath != null and hasCertificatePath!='' and hasCertificatePath ==1">
      and cer.CERTIFICATE_PATH is not null
    </if>
    <if test="hasCertificatePath != null  and hasCertificatePath!='' and hasCertificatePath ==0">
      and cer.CERTIFICATE_PATH is  null
    </if>
    order by t1.ADDTIME desc
    )e
    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page})
      where  rn>(#{page}-1)*#{rows}
    </if>
  </select>

  <!--查询评审结果记录个数//连证书-->
  <select id="selectCountCertificate" parameterType="pd" resultType="Integer">
    select count(*) as listcount from REC_RESULT left join REC_CERTIFICATE cer on cer.RESULTID=REC_RESULT.ID
    where JUDGING_CODE in
    (
    select JUDGING_CODE from base_judging where BACK3 = 1
    <if test="judgingId != null and judgingId !=''">
      and ID = #{judgingId}
    </if>
    <if test="manageUnitCode != null and manageUnitCode !=''">
      and MANAGE_UNIT = #{manageUnitCode}
    </if>
    )
    <if test="userName != null and userName !=''">
      and USER_NAME  like '%'||#{userName}||'%'
    </if>
    <if test="yearNo != null and yearNo !=''">
      and YEAR_NO = #{yearNo}
    </if>
    <if test="reviewSeries != null and reviewSeries !=''">
      and REVIEW_SERIES = #{reviewSeries}
    </if>
    <if test="professialCode != null and professialCode !=''">
      and PROFESSIAL_CODE = #{professialCode}
    </if>
    <if test="hasCertificate != null and hasCertificate!='' and hasCertificate ==1">
      and cer.id is not null
    </if>
    <if test="hasCertificate != null and hasCertificate!='' and hasCertificate ==0">
      and cer.id is  null
    </if>
    <if test="hasCertificatePath != null and hasCertificatePath!='' and hasCertificatePath ==1">
      and cer.CERTIFICATE_PATH is not null
    </if>
    <if test="hasCertificatePath != null  and hasCertificatePath!='' and hasCertificatePath ==0">
      and cer.CERTIFICATE_PATH is  null
    </if>
  </select>

    <select id="getModelXiang" parameterType="java.math.BigDecimal" resultMap="BaseResultMap3">
        select t1.*,tb1.*,tb2.JUDGING_NAME,tb3.GROUP_NAME,tb4.UNIT_NAME,tb5.dict_name as SERIES_NAME,tb6.*,
               tb7.PROFESSIAL_NAME,tb8.DICT_NAME as REVIEW_TYPE_NAME,
               tb9.DICT_NAME as SEX_NAME,tb10.DICT_NAME as LEVEL_NAME
        from REC_RESULT t1
        left join
        (select tab1.AREA_CODE as AREA_NUMBER,tab1.AREA_NAME,tab1.AREA_GRADE,tab2.AREA_NAME as pname,tab2.AREA_GRADE as pgrade from SYS_AREA tab1
        left join sys_area tab2 on tab1.AREA_PARENTCODE = tab2.AREA_CODE) tb1 on t1.AREA_CODE = tb1.AREA_NUMBER
        left join BASE_JUDGING tb2 on t1.JUDGING_CODE = tb2.JUDGING_CODE
        left join BASE_SUBJECT_GROUP tb3 on tb3.id = t1.GROUP_ID
        left join BASE_UNIT tb4 on tb4.UNIT_CODE = t1.UNIT_CODE
        left join (select * from sys_dict where GROUP_NAME = 'REVIEW_SERIES') tb5 on tb5.DICT_CODE = t1.REVIEW_SERIES
        left join
        (select tab3.dict_code,tab3.dict_name as POSITIONAL_NAME,tab4.dict_name as level_name from sys_dict tab3 left join sys_dict tab4 on tab3.BACKUP2 = tab4.DICT_CODE
        where tab3.GROUP_NAME = 'POSITIONAL_TITLES') tb6  on tb6.DICT_CODE = t1.POSITIONAL_TITLES
        left join BASE_SERIES_PROFESSIAL tb7 on tb7.PROFESSIAL_CODE = t1.PROFESSIAL_CODE
        left join sys_dict tb8 on tb8.DICT_CODE = t1.REVIEW_TYPE and tb8.GROUP_NAME = 'REVIEW_TYPE'
        left join SYS_DICT tb9 on tb9.DICT_CODE=t1.SEX and tb9.GROUP_NAME='SEX'
        left join SYS_DICT tb10 on tb10.DICT_CODE=t1.TITLE_LEVEL and tb10.GROUP_NAME='TITLE_LEVEL'
        where t1.JUDGING_CODE in
        (
        select JUDGING_CODE from base_judging where BACK3 = 1
        )
        and t1.ID=#{id,jdbcType=DECIMAL}
    </select>


  <!--评审结果列表//连证书-->
  <select id="selectResultCertificateByIdCardAndCertificateNumber" parameterType="pd" resultMap="BaseResultMap2">

    select t1.*,tb1.*,tb2.JUDGING_NAME,tb3.GROUP_NAME,tb4.UNIT_NAME,tb5.dict_name as SERIES_NAME,tb6.*,
           tb7.PROFESSIAL_NAME,tb8.DICT_NAME as REVIEW_TYPE_NAME,
    tb9.DICT_NAME as LEVEL_NAME,
    cer.id "cer.ID",cer.RESULTID "cer.RESULTID",cer.ADDTIME "cer.ADDTIME",cer.CERTIFICATE_NUMBER "cer.CERTIFICATE_NUMBER",cer.CERTIFICATE_PATH "cer.CERTIFICATE_PATH",
    cer.BACK1 "cer.BACK1",cer.BACK2 "cer.BACK2",cer.BACK3 "cer.BACK3"
    from REC_RESULT t1
    left join REC_CERTIFICATE cer on t1.id=cer.resultid
    left join
    (select tab1.AREA_CODE as AREA_NUMBER,tab1.AREA_NAME,tab1.AREA_GRADE,tab2.AREA_NAME as pname,tab2.AREA_GRADE as pgrade from SYS_AREA tab1
    left join sys_area tab2 on tab1.AREA_PARENTCODE = tab2.AREA_CODE) tb1 on t1.AREA_CODE = tb1.AREA_NUMBER
    left join BASE_JUDGING tb2 on t1.JUDGING_CODE = tb2.JUDGING_CODE
    left join BASE_SUBJECT_GROUP tb3 on tb3.id = t1.GROUP_ID
    left join BASE_UNIT tb4 on tb4.UNIT_CODE = t1.UNIT_CODE
    left join (select * from sys_dict where GROUP_NAME = 'REVIEW_SERIES') tb5 on tb5.DICT_CODE = t1.REVIEW_SERIES
    left join
    (select tab3.dict_code,tab3.dict_name as POSITIONAL_NAME,tab4.dict_name as level_name from sys_dict tab3 left join sys_dict tab4 on tab3.BACKUP2 = tab4.DICT_CODE
    where tab3.GROUP_NAME = 'POSITIONAL_TITLES') tb6  on tb6.DICT_CODE = t1.POSITIONAL_TITLES
    left join BASE_SERIES_PROFESSIAL tb7 on tb7.PROFESSIAL_CODE = t1.PROFESSIAL_CODE
    left join sys_dict tb8 on tb8.DICT_CODE = t1.REVIEW_TYPE and tb8.GROUP_NAME = 'REVIEW_TYPE'
    left join sys_dict tb9 on tb9.DICT_CODE = t1.TITLE_LEVEL and tb9.GROUP_NAME = 'TITLE_LEVEL'
    where t1.JUDGING_CODE in
    (
    select JUDGING_CODE from base_judging where BACK3 = 1
    )
      and t1.ID_CARD_NO  =#{idCardNo}
      and cer.CERTIFICATE_NUMBER = #{certificateNumber}
  </select>

</mapper>