<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="confing/mappers.Titles">


  <resultMap id="BaseResultMap" type="com.hz.demo.model.Titles">

    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="QUALIFICATION_CODE" jdbcType="VARCHAR" property="qualificationCode" />
    <result column="QUALIFICATION_NAME" jdbcType="VARCHAR" property="qualificationName" />
    <result column="IS_REVIEW" jdbcType="DECIMAL" property="isReview" />
    <result column="IS_FIRMLY_BELIEVE" jdbcType="DECIMAL" property="isFirmlyBelieve" />
    <result column="BACK1" jdbcType="VARCHAR" property="back1" />
    <result column="BACK2" jdbcType="VARCHAR" property="back2" />
    <result column="BACK3" jdbcType="VARCHAR" property="back3" />
  </resultMap>

  <sql id="Base_Column_List">
    ID, QUALIFICATION_CODE, QUALIFICATION_NAME, IS_REVIEW, IS_FIRMLY_BELIEVE, BACK1,
    BACK2, BACK3
  </sql>

  <!--根据条件查询全部记录-->
  <select id="getAllBaseUnit" parameterType="pd" resultMap="BaseResultMap">

    select <include refid="Base_Column_List"/>
    from
    (select rownum rn,e.* from BASE_PARAM_POSITIONALTITLE e

    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page}) b
      where  rn>(#{page}-1)*#{rows}
    </if>
    <if test="qualificationName != null and qualificationName !=''">
       and b.QUALIFICATION_NAME like '%'||#{qualificationName}||'%'
    </if>
    <if test="qualificationCode != null and qualificationCode !=''">
     and b.QUALIFICATION_CODE like '%'||#{qualificationCode}||'%'
   </if>
  </select>

  <!--根据条件查询全部记录个数-->
  <select id="selectCount" parameterType="pd" resultType="Integer">
    select count(*) as listcount from BASE_PARAM_POSITIONALTITLE  WHERE 1=1
    <if test="qualificationName != null and qualificationName !=''">
      and QUALIFICATION_NAME like '%'||#{qualificationName}||'%'
    </if>
    <if test="qualificationCode != null and qualificationCode !=''">
      and QUALIFICATION_CODE like '%'||#{qualificationCode}||'%'
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BASE_PARAM_POSITIONALTITLE
    where ID = #{id,jdbcType=DECIMAL}
  </select>

  <insert id="insertSelective" parameterType="com.hz.demo.model.Titles">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 18 10:40:47 CST 2018.
    -->
    insert into BASE_PARAM_POSITIONALTITLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="qualificationCode != null">
        QUALIFICATION_CODE,
      </if>
      <if test="qualificationName != null">
        QUALIFICATION_NAME,
      </if>
      <if test="isReview != null">
        IS_REVIEW,
      </if>
      <if test="isFirmlyBelieve != null">
        IS_FIRMLY_BELIEVE,
      </if>
      <if test="back1 != null">
        BACK1,
      </if>
      <if test="back2 != null">
        BACK2,
      </if>
      <if test="back3 != null">
        BACK3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="qualificationCode != null">
        #{qualificationCode,jdbcType=VARCHAR},
      </if>
      <if test="qualificationName != null">
        #{qualificationName,jdbcType=VARCHAR},
      </if>
      <if test="isReview != null">
        #{isReview,jdbcType=DECIMAL},
      </if>
      <if test="isFirmlyBelieve != null">
        #{isFirmlyBelieve,jdbcType=DECIMAL},
      </if>
      <if test="back1 != null">
        #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        #{back3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.demo.model.Titles">
    update BASE_PARAM_POSITIONALTITLE
    <set>
      <if test="qualificationCode != null">
        QUALIFICATION_CODE = #{qualificationCode,jdbcType=VARCHAR},
      </if>
      <if test="qualificationName != null">
        QUALIFICATION_NAME = #{qualificationName,jdbcType=VARCHAR},
      </if>
      <if test="isReview != null">
        IS_REVIEW = #{isReview,jdbcType=DECIMAL},
      </if>
      <if test="isFirmlyBelieve != null">
        IS_FIRMLY_BELIEVE = #{isFirmlyBelieve,jdbcType=DECIMAL},
      </if>
      <if test="back1 != null">
        BACK1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        BACK2 = #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        BACK3 = #{back3,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.demo.model.Titles">
    update BASE_PARAM_POSITIONALTITLE
    set QUALIFICATION_CODE = #{qualificationCode,jdbcType=VARCHAR},
      QUALIFICATION_NAME = #{qualificationName,jdbcType=VARCHAR},
      IS_REVIEW = #{isReview,jdbcType=DECIMAL},
      IS_FIRMLY_BELIEVE = #{isFirmlyBelieve,jdbcType=DECIMAL},
      BACK1 = #{back1,jdbcType=VARCHAR},
      BACK2 = #{back2,jdbcType=VARCHAR},
      BACK3 = #{back3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <delete id="deleteTitles" parameterType="java.lang.String" >

        delete from BASE_PARAM_POSITIONALTITLE
       where QUALIFICATION_NAME = #{qualificationName,jdbcType=VARCHAR}

  </delete>

  <insert id="InsertTitles" parameterType="java.util.List" useGeneratedKeys="false">
      insert all
    <foreach item="item" index="index" collection="list">
        into BASE_PARAM_POSITIONALTITLE (
            QUALIFICATION_CODE,
            QUALIFICATION_NAME
          )
      values (
          #{item.qualificationCode, jdbcType=VARCHAR}
          ,#{item.qualificationName, jdbcType=VARCHAR}
      )
    </foreach>
    SELECT 1 FROM DUAL
  </insert>
  <select id="findTitles" parameterType="pd" resultMap="BaseResultMap">

    select QUALIFICATION_CODE qualificationCode,QUALIFICATION_NAME qualificationName
    from BASE_PARAM_POSITIONALTITLE

  </select>
</mapper>