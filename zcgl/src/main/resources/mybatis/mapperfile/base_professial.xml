<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="confing/mappers.base_professial">
  <resultMap id="BaseResultMap" type="com.hz.demo.model.base_professial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 11:13:25 CST 2018.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PROFESSIAL_CODE" jdbcType="VARCHAR" property="professialCode" />
    <result column="PROFESSIAL_PARENTCODE" jdbcType="VARCHAR" property="professialParentcode" />
    <result column="PROFESSIAL_NAME" jdbcType="VARCHAR" property="professialName" />
    <result column="PROFESSIAL_GRADE" jdbcType="VARCHAR" property="professialGrade" />
    <result column="FSORT" jdbcType="DECIMAL" property="fsort" />
    <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
    <result column="ADDUSERID" jdbcType="VARCHAR" property="adduserid" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
    <result column="BACK1" jdbcType="VARCHAR" property="back1" />
    <result column="BACK2" jdbcType="VARCHAR" property="back2" />
    <result column="BACK3" jdbcType="VARCHAR" property="back3" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 11:13:25 CST 2018.
    -->
    ID, PROFESSIAL_CODE, PROFESSIAL_PARENTCODE, PROFESSIAL_NAME, PROFESSIAL_GRADE, FSORT, 
    ADDTIME, ADDUSERID, STATE, BACK1, BACK2, BACK3
  </sql>
  <select id="selectByPrimaryKey" parameterType="INTEGER" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 11:13:25 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from BASE_PROFESSIAL
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="INTEGER">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 11:13:25 CST 2018.
    -->
    delete from BASE_PROFESSIAL
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hz.demo.model.base_professial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 11:13:25 CST 2018.
    -->
    insert into BASE_PROFESSIAL (ID, PROFESSIAL_CODE, PROFESSIAL_PARENTCODE, 
      PROFESSIAL_NAME, PROFESSIAL_GRADE, FSORT, 
      ADDTIME, ADDUSERID, STATE, 
      BACK1, BACK2, BACK3
      )
    values (#{id,jdbcType=INTEGER}, #{professialCode,jdbcType=VARCHAR}, #{professialParentcode,jdbcType=VARCHAR},
      #{professialName,jdbcType=VARCHAR}, #{professialGrade,jdbcType=VARCHAR}, #{fsort,jdbcType=DECIMAL}, 
      #{addtime,jdbcType=TIMESTAMP}, #{adduserid,jdbcType=VARCHAR}, #{state,jdbcType=DECIMAL}, 
      #{back1,jdbcType=VARCHAR}, #{back2,jdbcType=VARCHAR}, #{back3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hz.demo.model.base_professial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 11:13:25 CST 2018.
    -->
    insert into BASE_PROFESSIAL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="professialCode != null">
        PROFESSIAL_CODE,
      </if>
      <if test="professialParentcode != null">
        PROFESSIAL_PARENTCODE,
      </if>
      <if test="professialName != null">
        PROFESSIAL_NAME,
      </if>
      <if test="professialGrade != null">
        PROFESSIAL_GRADE,
      </if>
      <if test="fsort != null">
        FSORT,
      </if>
      <if test="addtime != null">
        ADDTIME,
      </if>
      <if test="adduserid != null">
        ADDUSERID,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="back1 != null">
        BACK1,
      </if>
      <if test="back2 != null">
        BACK2,
      </if>
      <if test="back3 != null">
        BACK3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="professialCode != null">
        #{professialCode,jdbcType=VARCHAR},
      </if>
      <if test="professialParentcode != null">
        #{professialParentcode,jdbcType=VARCHAR},
      </if>
      <if test="professialName != null">
        #{professialName,jdbcType=VARCHAR},
      </if>
      <if test="professialGrade != null">
        #{professialGrade,jdbcType=VARCHAR},
      </if>
      <if test="fsort != null">
        #{fsort,jdbcType=DECIMAL},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="adduserid != null">
        #{adduserid,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=DECIMAL},
      </if>
      <if test="back1 != null">
        #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        #{back3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.demo.model.base_professial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 11:13:25 CST 2018.
    -->
    update BASE_PROFESSIAL
    <set>
      <if test="professialCode != null">
        PROFESSIAL_CODE = #{professialCode,jdbcType=VARCHAR},
      </if>
      <if test="professialParentcode != null">
        PROFESSIAL_PARENTCODE = #{professialParentcode,jdbcType=VARCHAR},
      </if>
      <if test="professialName != null">
        PROFESSIAL_NAME = #{professialName,jdbcType=VARCHAR},
      </if>
      <if test="professialGrade != null">
        PROFESSIAL_GRADE = #{professialGrade,jdbcType=VARCHAR},
      </if>
      <if test="fsort != null">
        FSORT = #{fsort,jdbcType=DECIMAL},
      </if>
      <if test="addtime != null">
        ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="adduserid != null">
        ADDUSERID = #{adduserid,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=DECIMAL},
      </if>
      <if test="back1 != null">
        BACK1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        BACK2 = #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        BACK3 = #{back3,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.demo.model.base_professial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 12 11:13:25 CST 2018.
    -->
    update BASE_PROFESSIAL
    set PROFESSIAL_CODE = #{professialCode,jdbcType=VARCHAR},
      PROFESSIAL_PARENTCODE = #{professialParentcode,jdbcType=VARCHAR},
      PROFESSIAL_NAME = #{professialName,jdbcType=VARCHAR},
      PROFESSIAL_GRADE = #{professialGrade,jdbcType=VARCHAR},
      FSORT = #{fsort,jdbcType=DECIMAL},
      ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      ADDUSERID = #{adduserid,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=DECIMAL},
      BACK1 = #{back1,jdbcType=VARCHAR},
      BACK2 = #{back2,jdbcType=VARCHAR},
      BACK3 = #{back3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <!--根据条件查询全部记录-->
  <select id="selectList" parameterType="pd" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from
    (select rownum rn,a.* from
    (select
    <include refid="Base_Column_List"/>
    from base_professial WHERE 1=1
    <if test="professialParentcode != null and professialParentcode!='' ">
      and PROFESSIAL_PARENTCODE = #{professialParentcode}
    </if>
    <if test="areaName != null and areaName!='' ">
      and PROFESSIAL_NAME like '%'||#{professialName}||'%'
    </if>
    ORDER by fsort) a
    <if test="page != null and rows != null">
      where rownum &lt;=#{rows}*#{page}) b
      where  rn>(#{page}-1)*#{rows}
    </if>
  </select>
  <!--根据条件查询全部记录个数-->
  <select id="selectCount" parameterType="pd" resultType="Integer">
    select count(*) as listcount
    from base_professial WHERE 1=1
    <if test="professialParentcode != null and professialParentcode!='' ">
      and PROFESSIAL_PARENTCODE = #{professialParentcode}
    </if>
    <if test="areaName != null and areaName!='' ">
      and PROFESSIAL_NAME like '%'||#{professialName}||'%'
    </if>
  </select>
  <!--获取菜单页面树-->
  <select id="getTreeList" parameterType="pd" resultType="Map">
    SELECT PROFESSIAL_CODE as id,PROFESSIAL_NAME as text, PROFESSIAL_PARENTCODE as pid,PROFESSIAL_GRADE as attributes  FROM base_professial ORDER BY fsort
  </select>
  <!--根据条件查询实体-->
  <select id="getProfeWhere" parameterType="pd" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from base_professial
    where 1=1
      <if test="professialCode != null">
         and PROFESSIAL_CODE = #{professialCode,jdbcType=VARCHAR}
      </if>
      <if test="professialName != null">
        and  PROFESSIAL_NAME = #{professialName,jdbcType=VARCHAR}
      </if>
  </select>
  <select id="getProfeWhereTwo" parameterType="pd" resultType="pd">
    select
    ID,
    REVIEW_SERIES,
    PROFESSIAL_CODE,
    BACK1,
    BACK2,
    BACK3,
    PROFESSIAL_NAME,
    STATE
    from BASE_SERIES_PROFESSIAL
    where 1=1
    <if test="professialCode != null">
      and PROFESSIAL_CODE = #{professialCode,jdbcType=VARCHAR}
    </if>
    <if test="professialName != null">
      and  PROFESSIAL_NAME = #{professialName,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="findProfessial" parameterType="pd" resultType="pd">
    select
    wm_concat(PROFESSIAL_NAME) PROFESSIAL_NAME
    from BASE_SERIES_PROFESSIAL
    where PROFESSIAL_CODE in
    <foreach collection="PROFESSIAL_ID.split(',')" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <!--根据条件查询全部机构-->
  <select id="selectListWhere" parameterType="pd" resultType="Map">

    SELECT PROFESSIAL_CODE as id,PROFESSIAL_NAME as text,PROFESSIAL_PARENTCODE as pid  FROM
    base_professial
    ORDER BY addtime desc
  </select>
</mapper>